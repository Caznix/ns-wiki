"use strict";(self.webpackChunkns_wiki=self.webpackChunkns_wiki||[]).push([[8956],{5680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>g});var o=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),h=a,g=u["".concat(s,".").concat(h)]||u[h]||m[h]||r;return n?o.createElement(g,i(i({ref:t},d),{},{components:n})):o.createElement(g,i({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},264:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var o=n(8168),a=(n(6540),n(5680));const r={},i="VTF Modding",l={unversionedId:"source/guides/tools/VTFModding",id:"source/guides/tools/VTFModding",isDocsHomePage:!1,title:"VTF Modding",description:"VTF Overview",source:"@site/docs/source/guides/tools/VTFModding.md",sourceDirName:"source/guides/tools",slug:"/source/guides/tools/VTFModding",permalink:"/ns-wiki/docs/source/guides/tools/VTFModding",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/source/guides/tools/VTFModding.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MDL Modding",permalink:"/ns-wiki/docs/source/guides/tools/MDLModding"},next:{title:"Modding Tools",permalink:"/ns-wiki/docs/source/guides/tools/index"}},s=[{value:"VTF Overview",id:"vtf-overview",children:[]},{value:"VMT Overview",id:"vmt-overview",children:[]},{value:"Editing FX that use VTFs",id:"editing-fx-that-use-vtfs",children:[]},{value:"VTF Skins",id:"vtf-skins",children:[]},{value:"VPK Tool",id:"vpk-tool",children:[]},{value:"Hex Editor",id:"hex-editor",children:[]},{value:"Creating VMT",id:"creating-vmt",children:[]},{value:"VTFEdit",id:"vtfedit",children:[]},{value:"Configuring your .vmt",id:"configuring-your-vmt",children:[]},{value:"Final VPK folder",id:"final-vpk-folder",children:[]},{value:"Finished.",id:"finished",children:[]},{value:"Making your Skin Animated",id:"making-your-skin-animated",children:[]}],p={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.yg)(d,(0,o.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"vtf-modding"},"VTF Modding"),(0,a.yg)("h2",{id:"vtf-overview"},"VTF Overview"),(0,a.yg)("p",null,'VTF, short for \\"Valve Texture Format\\", is a texture type used by Valve\nin the source engine and is occasionally in Titanfall. vtf\\\'s are used\nfor fx, animation, and other textures.'),(0,a.yg)("h2",{id:"vmt-overview"},"VMT Overview"),(0,a.yg)("p",null,'VMT, short for \\"Valve Material Type\\", is a text\n',(0,a.yg)("a",{parentName:"p",href:"https://developer.valvesoftware.com/wiki/Material"},"material")," system\nthat dictates how the game perceives a vtf outside of how it looks. It\nuses\n",(0,a.yg)("a",{parentName:"p",href:"https://developer.valvesoftware.com/wiki/Category:List_of_Shader_Parameters"},"parameters"),"\nand ",(0,a.yg)("a",{parentName:"p",href:"https://developer.valvesoftware.com/wiki/Material_proxies"},"proxies"),"\nto dictate how\n",(0,a.yg)("a",{parentName:"p",href:"https://developer.valvesoftware.com/wiki/Shader"},"shaders")," will show the\ngame. We will go into greater detail later."),(0,a.yg)("h2",{id:"editing-fx-that-use-vtfs"},"Editing FX that use VTFs"),(0,a.yg)("p",null,"A lot of fx in Titanfall use vtf\\'s as textures. Therefore, if the\ncorresponding vtf can be found, we can do almost anything with the fx\\'s\nappearence. Example Mod: ",(0,a.yg)("a",{parentName:"p",href:"https://northstar.thunderstore.io/package/EXRILL/Exrills_Blue_Lstar/"},"Exrill\\'s Blue\nL-Star"),".\nSince the L-Star has a physical bullet that is counted as fx, we can\nedit how it looks."),(0,a.yg)("h2",{id:"vtf-skins"},"VTF Skins"),(0,a.yg)("p",null,"Since vtf modding was originally for introducing custom weapon skins,\nmost of the development on it was focused on that. The same concepts\napply to modding other textures though."),(0,a.yg)("p",null,"Most textures in the game use .dds but we can make them use .vtf."),(0,a.yg)("p",null,"What we\\'ll be doing is:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Extracting the model."),(0,a.yg)("li",{parentName:"ul"},"Replacing the texture path in the mdl to point to our texture."),(0,a.yg)("li",{parentName:"ul"},"Creating our directory."),(0,a.yg)("li",{parentName:"ul"},"Setting up a .vmt file.")),(0,a.yg)("h2",{id:"vpk-tool"},"VPK Tool"),(0,a.yg)("p",null,"You have 2 options for a VPK tool. Pick either the older VPK tool: ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/Wanty5883/Titanfall2/blob/master/tools/Titanfall_VPKTool3.4_Portable.zip"},"cra0\nVPKTool"),"\nor the Newer VPK tool: ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/harmonytf/HarmonyVPKTool"},"Harmony\nVPKTool")," (better)."),(0,a.yg)("p",null,"With your VPK tool opened. \\'Open\\'\n",(0,a.yg)("inlineCode",{parentName:"p"},"englishclient_mp_common.pak000_dir.vpk")," which is located in\n",(0,a.yg)("inlineCode",{parentName:"p"},"Titanfall2/vpk"),"."),(0,a.yg)("p",null,"Inside of the VPK, not all guns filenames match their ingame names. Here\nis ",(0,a.yg)("a",{parentName:"p",href:"https://noskill.gitbook.io/titanfall2/documentation/file-location/weapon/weapon-model"},"list of weapon\nnames"),"\nto help you out."),(0,a.yg)("p",null,"Navigate to ",(0,a.yg)("inlineCode",{parentName:"p"},"models/weapons/car101"),". Extract all the viewmodel versions\n(ptpov) and normal model (w) mdl\\'s."),(0,a.yg)("h2",{id:"hex-editor"},"Hex Editor"),(0,a.yg)("p",null,"To change the path in the .mdl to the custom .vmt. We need a hex editor.\nBefore editing with hex editors, you need to be aware that hex editors\ncannot add or delete data, only replace it. I will use\n",(0,a.yg)("a",{parentName:"p",href:"https://mh-nexus.de/en/hxd/"},"HxD"),", but you can also use\n",(0,a.yg)("a",{parentName:"p",href:"https://hex-rays.com/ida-free/"},"ida"),", or anything else as its personal\npreference."),(0,a.yg)("p",null,"Open your .mdl in your hex editor."),(0,a.yg)("p",null,"We want to get closer to the path we need or else you\\'ll be scrolling\nand searching for hours. Search:(CTRL+F) for skin_31. If you don\\'t get\nany matches, try skn_31, skin31, elite, or prime. The path should look\nsomething like ",(0,a.yg)("inlineCode",{parentName:"p"},".models\\Weapons_R2\\weaponname\\weaponname_skin_31"),".\nDon\\'t change this unless you want to effect skin31 textures."),(0,a.yg)("p",null,"The path we do need to change is\n",(0,a.yg)("inlineCode",{parentName:"p"},".models\\Weapons_R2\\weaponname\\weaponname"),". This comes before the\n",(0,a.yg)("inlineCode",{parentName:"p"},"skin_31")," path. I recommend only changing the last section of the path.\nWe\\'ll change ",(0,a.yg)("inlineCode",{parentName:"p"},".models\\Weapons_r2\\car_smg\\CAR_smg")," to\n",(0,a.yg)("inlineCode",{parentName:"p"},".models\\weapons_r2\\car_smg\\car_ctm"),". Note the capitalization, as some\nvpk repacking tools cannot repack properly if the changed path contains\ncapitals."),(0,a.yg)("p",null,"Now copy these changes for ",(0,a.yg)("inlineCode",{parentName:"p"},"ptpov_")," and/or ",(0,a.yg)("inlineCode",{parentName:"p"},"w_")," model(s). As these are\nthe stow (On your back) and main menu models. If don\\'t change these.\nYour texture will only work when in a match."),(0,a.yg)("h2",{id:"creating-vmt"},"Creating VMT"),(0,a.yg)("p",null,"In the same folder you extracted your mdl\\'s. Make a ",(0,a.yg)("inlineCode",{parentName:"p"},"materials")," folder\nnext to the ",(0,a.yg)("inlineCode",{parentName:"p"},"models")," folder."),(0,a.yg)("p",null,"Example: .. code-block:: text"),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},"models materials")),(0,a.yg)("p",null,"Recreate the path you changed in the ",(0,a.yg)("inlineCode",{parentName:"p"},"materials")," folder, such that the\nlast section is a .vmt file:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-text"},"materials\n\u2514\u2500 models\n      \u2514\u2500 weapons_r2\n            \u2514\u2500 car_smg\n                 \u2514\u2500 car_ctm.vmt\n")),(0,a.yg)("p",null,"Inside your .vmt paste: .. code-block:: text"),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},'\\"UnlitTwoTexture\\" {'),(0,a.yg)("blockquote",{parentName:"blockquote"},(0,a.yg)("p",{parentName:"blockquote"},'\\"\\$surfaceprop\\" \\"metal\\" \\"\\$basetexture\\" \\"\\" \\"\\$texture2\\"\n\\"\\" \\"\\$bumpmap\\" \\"\\" \\"\\$allowoverbright\\" \\"1\\"\n\\"\\$vertexcolor\\" 1 \\"\\$vertexalpha\\" 1 \\"\\$decal\\" \\"1\\"\n\\"\\$model\\" 1 \\"\\$nocull\\" \\"1\\"')),(0,a.yg)("p",{parentName:"blockquote"},"}")),(0,a.yg)("p",null,"When we use vtf textures, we can only use the albedo and normal. Learn\nmore about ",(0,a.yg)("a",{parentName:"p",href:"https://retryy.gitbook.io/tf2/wiki/create/texturemaps"},"texture\nmaps")," here."),(0,a.yg)("h2",{id:"vtfedit"},"VTFEdit"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://nemstools.github.io/pages/VTFLib-Download.html"},"VTFEdit")," is a\ntool to edit, view, and create .vtf files."),(0,a.yg)("p",null,"Launch\n",(0,a.yg)("a",{parentName:"p",href:"https://nemstools.github.io/pages/VTFLib-Download.html"},"VTFEdit"),". Top\nleft, click ",(0,a.yg)("inlineCode",{parentName:"p"},"File"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"Import"),", find and Import your custom texture(s)."),(0,a.yg)("p",null,"When importing your normal map. Choose to import as a ",(0,a.yg)("inlineCode",{parentName:"p"},"Volume Map")," When\nimporting your diffuse map. Choose to import as a ",(0,a.yg)("inlineCode",{parentName:"p"},"Animated Map")),(0,a.yg)("p",null,"More info about .vtf format possibilities\n",(0,a.yg)("a",{parentName:"p",href:"https://retryy.gitbook.io/tf2/wiki/create/formats"},"here"),", or the\nofficial source docs\n",(0,a.yg)("a",{parentName:"p",href:"https://developer.valvesoftware.com/wiki/Valve_Texture_Format"},"here"),"."),(0,a.yg)("p",null,"After that, save your new .vtf\\'s into the same folder as your custom\n.vmt with a simple name."),(0,a.yg)("h2",{id:"configuring-your-vmt"},"Configuring your .vmt"),(0,a.yg)("p",null,"In the ",(0,a.yg)("inlineCode",{parentName:"p"},'"$basetexture"')," argument enter your .vtf texture directory.\nWe\\'ll use ",(0,a.yg)("inlineCode",{parentName:"p"},"models\\weapons_r2\\car_smg\\car_ctm\\NAMEOFVTF"),". This should\npoint to your custom diffuse .vtf with the simple name. The game expects\nthese paths to be without the ",(0,a.yg)("inlineCode",{parentName:"p"},".vtf")," file extension - don\\'t add it."),(0,a.yg)("p",null,"Do the same for adding your normal map with the ",(0,a.yg)("inlineCode",{parentName:"p"},'"$bumpmap"')," argument."),(0,a.yg)("p",null,"In some cases you might have to create another vtf with literally any\nimage. Put its path in the ",(0,a.yg)("inlineCode",{parentName:"p"},'"$texture2"')," argument. As far as i know,\nthis is sometimes necessary even though the texture isn\\'t used."),(0,a.yg)("h2",{id:"final-vpk-folder"},"Final VPK folder"),(0,a.yg)("p",null,"Your root folder should look somewhat like this"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-text"},"root\n\u251c\u2500 materials\n\u2502  \u2514\u2500 models\n\u2502     \u2514\u2500 weapons_r2\n\u2502        \u2514\u2500 car_smg\n\u2502           \u251c\u2500 YOURTEXTURE.vtf\n\u2502           \u251c\u2500 YOURTEXTURE.vtf\n\u2502           \u2514\u2500 car_ctm.vmt\n\u2514\u2500 models\n   \u2514\u2500 weapons\n      \u2514\u2500car101\n        \u251c\u2500 ptpov_car101.mdl\n        \u2514\u2500 w_car101.mdl\n")),(0,a.yg)("h2",{id:"finished"},"Finished."),(0,a.yg)("p",null,"You\\'re done! You just need to pack it into a vpk with a vpk tool (for\nour gun mod, we\\'d repack to ",(0,a.yg)("inlineCode",{parentName:"p"},"englishclient_mp_common.pak000_dir.vpk"),"),\nand put the vpk into a Northstar mod inside a ",(0,a.yg)("inlineCode",{parentName:"p"},"vpk")," folder."),(0,a.yg)("p",null,"Help with repacking\n",(0,a.yg)("a",{parentName:"p",href:"https://noskill.gitbook.io/titanfall2/intro/duction/vpk-packpack"},"here"),",\nand help with Northstar mods\n",(0,a.yg)("a",{parentName:"p",href:"https://r2northstar.readthedocs.io/en/latest/guides/gettingstarted.html"},"here"),"."),(0,a.yg)("h2",{id:"making-your-skin-animated"},"Making your Skin Animated"),(0,a.yg)("p",null,"To add animation functionality, all we need to do is add a Proxie; which\nis just a modifier inside a ",(0,a.yg)("inlineCode",{parentName:"p"},".vmt"),", and change our albedo vtf texture."),(0,a.yg)("p",null,"You need to create a .vtf texture with multiple frames imported to a\nsingle .vtf texture, that\\'s your animated texture. You can do this with\n",(0,a.yg)("a",{parentName:"p",href:"https://nemstools.github.io/pages/VTFLib-Download.html"},"VTFEdit"),". Then\nassign the texture in ",(0,a.yg)("inlineCode",{parentName:"p"},"$basetexture"),"."),(0,a.yg)("p",null,"At the bottom of your vmt but before the ",(0,a.yg)("inlineCode",{parentName:"p"},"}"),", add this: .. code-block::\ntext"),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},'\\"Proxies\\" { AnimatedTexture { animatedTextureVar \\$basetexture\nanimatedTextureFrameNumVar \\$frame animatedTextureFrameRate 30 } }')),(0,a.yg)("p",null,"To change the fps of the texture, change the value after\n",(0,a.yg)("inlineCode",{parentName:"p"},"animatedTextureFrameRate"),", and you\\'ll be done making your texture\nanimated!"))}u.isMDXComponent=!0}}]);