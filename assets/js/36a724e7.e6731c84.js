"use strict";(self.webpackChunkns_wiki=self.webpackChunkns_wiki||[]).push([[1950],{5680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>g});var o=t(6540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function u(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?u(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},u=Object.keys(e);for(o=0;o<u.length;o++)t=u[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(o=0;o<u.length;o++)t=u[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=o.createContext({}),s=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=s(e.components);return o.createElement(l.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},p=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,u=e.originalType,l=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),m=s(t),p=i,g=m["".concat(l,".").concat(p)]||m[p]||c[p]||u;return t?o.createElement(g,a(a({ref:n},d),{},{components:t})):o.createElement(g,a({ref:n},d))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var u=t.length,a=new Array(u);a[0]=p;var r={};for(var l in n)hasOwnProperty.call(n,l)&&(r[l]=n[l]);r.originalType=e,r[m]="string"==typeof e?e:i,a[1]=r;for(var s=2;s<u;s++)a[s]=t[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5437:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>a,default:()=>m,frontMatter:()=>u,metadata:()=>r,toc:()=>l});var o=t(8168),i=(t(6540),t(5680));const u={},a="Creating a custom Menu",r={unversionedId:"source/guides/scripting/custommenus",id:"source/guides/scripting/custommenus",isDocsHomePage:!1,title:"Creating a custom Menu",description:"This tutorial will explain how to create a mod that adds a new menu",source:"@site/docs/source/guides/scripting/custommenus.md",sourceDirName:"source/guides/scripting",slug:"/source/guides/scripting/custommenus",permalink:"/ns-wiki/docs/source/guides/scripting/custommenus",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/source/guides/scripting/custommenus.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Pushing Values to the SQVM Stack",permalink:"/ns-wiki/docs/source/guides/reversing/squirrelreversing"},next:{title:"Creating gamemodes",permalink:"/ns-wiki/docs/source/guides/scripting/gamemodemods"}},l=[{value:"Setup",id:"setup",children:[]},{value:"Minimal Example",id:"minimal-example",children:[]},{value:"Adding a footer to the Main menu",id:"adding-a-footer-to-the-main-menu",children:[]},{value:"Scripting Menu Logic",id:"scripting-menu-logic",children:[{value:"Adding a Counter",id:"adding-a-counter",children:[]},{value:"Adding a Reset Button",id:"adding-a-reset-button",children:[]},{value:"Resetting the Counter when the Menu is closed",id:"resetting-the-counter-when-the-menu-is-closed",children:[]}]}],s={toc:l},d="wrapper";function m(e){let{components:n,...t}=e;return(0,i.yg)(d,(0,o.A)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"creating-a-custom-menu"},"Creating a custom Menu"),(0,i.yg)("p",null,"This tutorial will explain how to create a mod that adds a new menu\nthat\\'s viewable by a footer in the main menu."),(0,i.yg)("h2",{id:"setup"},"Setup"),(0,i.yg)("p",null,"First, create a new folder with this ",(0,i.yg)("inlineCode",{parentName:"p"},"mod.json"),":"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "Name": "CustomMenuTutorial",\n    "Description": "Custom menu tutorial",\n    "LoadPriority": 1,\n    "Scripts": [\n        {\n            "Path": "ui/custom_menu.nut",\n            "RunOn": "UI",\n            "UICallback": {\n                "Before": "AddCustomMenu"\n            }\n        }\n    ]\n}\n')),(0,i.yg)("p",null,"Then create ",(0,i.yg)("inlineCode",{parentName:"p"},"custom_menu.nut")," in ",(0,i.yg)("inlineCode",{parentName:"p"},"./mod/scripts/vscripts/ui"),"."),(0,i.yg)("h2",{id:"minimal-example"},"Minimal Example"),(0,i.yg)("p",null,"Create ",(0,i.yg)("inlineCode",{parentName:"p"},"AddCustomMenu")," in ",(0,i.yg)("inlineCode",{parentName:"p"},"custom_menu.nut")," like this and make it\nglobal:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},'global function AddCustomMenu\n\nvoid function AddCustomMenu()\n{\n    AddMenu( "CustomMenu", $"resource/ui/menus/custommenu.menu", CustomMenu_Init )\n}\n')),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"AddCustomMenu")," will get called when the UI vm is initializing and\ninstantiate your menu. You can access your menu with\n",(0,i.yg)("inlineCode",{parentName:"p"},'GetMenu( "CustomMenu" )')," after it has been initialized."),(0,i.yg)("p",null,"Next, create the file that defines the layout of your menu. It\\'s\nalready referenced in the above code at\n",(0,i.yg)("inlineCode",{parentName:"p"},'$"resource/ui/menus/custommenu.menu"'),". Create the file\n",(0,i.yg)("inlineCode",{parentName:"p"},"./mod/resource/ui/menus/custommenu.menu")," and paste this code in it."),(0,i.yg)("p",null,"::: dropdown\n.menu configuration"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},'resource/ui/menus/custommenu.menu\n{\n    menu\n    {\n        ControlName Frame\n        xpos 0\n        ypos 0\n        zpos 3\n        wide f0\n        tall f0\n        autoResize 0\n        visible 1\n        enabled 1\n        pinCorner 0\n        PaintBackgroundType 0\n        infocus_bgcolor_override "0 0 0 0"\n        outoffocus_bgcolor_override "0 0 0 0"\n\n        Vignette // Darkened frame edges\n        {\n            ControlName ImagePanel\n            InheritProperties MenuVignette\n        }\n\n        Title // The title of this menu\n        {\n            ControlName Label\n            InheritProperties MenuTitle\n            labelText "#CUSTOM_MENU_TITLE"\n        }\n\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// Content\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n        SomeLabel // A label that is placed in the middle of the screen\n        {\n            ControlName Label\n\n            labelText "Some Label"\n\n            auto_wide_tocontents 1 // Set width automatically relative to the label content\n\n            xpos %50\n            ypos %50\n        }\n\n        SomeButton // A button that is placed directly beneath the label\n        {\n            ControlName RuiButton\n            InheritProperties RuiSmallButton\n\n            tall 50\n            wide 250\n\n            labelText "Some Button"\n            textAlignment center\n\n            pin_to_sibling SomeLabel\n            pin_corner_to_sibling TOP\n            pin_to_sibling_corner BOTTOM\n        }\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// Footer\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n        FooterButtons // Allow adding footers to this menu\n        {\n            ControlName         CNestedPanel\n            InheritProperties   FooterButtons\n        }\n    }\n}\n')),(0,i.yg)("p",null,":::"),(0,i.yg)("p",null,"Now you\\'ll need to define ",(0,i.yg)("inlineCode",{parentName:"p"},"CustomMenu_Init"),". This is the function\npreviously defined that contains all initializations needed for this\nmenu."),(0,i.yg)("p",null,"First, create an instantiated struct for variables that should be\navailable in the scope of your custom menu script."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"struct {\n    var menu\n} file\n")),(0,i.yg)("p",null,"At the moment, this struct can only contain your menu. To set it, edit\n",(0,i.yg)("inlineCode",{parentName:"p"},"AddCustomMenu")," like this:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-diff"},'void function AddCustomMenu()\n{\n   AddMenu( "CustomMenu", $"resource/ui/menus/custommenu.menu", CustomMenu_Init )\n+   file.menu = GetMenu( "CustomMenu" )\n}\n')),(0,i.yg)("p",null,"Now, define ",(0,i.yg)("inlineCode",{parentName:"p"},"CustomMenu_Init"),". It doesn\\'t need to be global."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},'void function CustomMenu_Init()\n{\n    AddMenuFooterOption( file.menu, BUTTON_B, "#B_BUTTON_BACK", "#BACK" )\n}\n')),(0,i.yg)("p",null,"This adds a footer to your menu, that allows the user to navigate back."),(0,i.yg)("h2",{id:"adding-a-footer-to-the-main-menu"},"Adding a footer to the Main menu"),(0,i.yg)("p",null,"Currently, there is no way to access your menu. You can open your (or\nany other menu) with ",(0,i.yg)("inlineCode",{parentName:"p"},"AdvanceMenu"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},'AdvanceMenu( GetMenu( "CustomMenu" ) )\n')),(0,i.yg)("p",null,"This is useful for callbacks triggered by button presses like from\nfooters. To add a footer to the Main menu, first edit your ",(0,i.yg)("inlineCode",{parentName:"p"},"mod.json"),"\ncode callbacks:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-diff"},'"Scripts": [\n   {\n       "Path": "ui/custom_menu.nut",\n       "RunOn": "UI",\n       "UICallback": {\n+           "Before": "AddCustomMenu", // <- Notice the added comma\n+           "After": "AddCustomMenuFooter"\n       }\n   }\n]\n')),(0,i.yg)("p",null,"We need a new callback that\\'s run after all menus are initialized to\nadd any footers to them. Create the global function\n",(0,i.yg)("inlineCode",{parentName:"p"},"AddCustomMenuFooter")," in ",(0,i.yg)("inlineCode",{parentName:"p"},"custom_menu.nut")," like this:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},'void function AddCustomMenuFooter()\n{\n    AddMenuFooterOption(\n        GetMenu( "MainMenu" ), // Get the main menu. We want to add a footer to this one. Change this if you want to add a footer to another menu\n        BUTTON_X, // This sets the gamepad button that will trigger the click callback defined later\n        PrependControllerPrompts( BUTTON_X, " Custom Menu" ), // This is the text that will show as the label of the footer if a gamepad is used\n        "Custom Menu", // This is the label text of the footer if no gamepad is used\n        void function( var button ) // This is the click callback.\n        {\n            /*\n                This is an anonymous function.\n                It will be run every time the footer is pressed.\n            */\n            AdvanceMenu( file.menu )\n        }\n    )\n}\n')),(0,i.yg)("h2",{id:"scripting-menu-logic"},"Scripting Menu Logic"),(0,i.yg)("h3",{id:"adding-a-counter"},"Adding a Counter"),(0,i.yg)("p",null,"We\\'ll use the button we defined earlier in the ",(0,i.yg)("inlineCode",{parentName:"p"},".menu")," file to increase\na number of clicks and the label to show how often the user has clicked\nthat button."),(0,i.yg)("p",null,"first, add ",(0,i.yg)("inlineCode",{parentName:"p"},"someLabel")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"clicks")," to the ",(0,i.yg)("inlineCode",{parentName:"p"},"file")," struct. Then define\nthe label in the ",(0,i.yg)("inlineCode",{parentName:"p"},"AddCustomMenu")," and add a callback to the button."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-diff"},'struct {\n   var menu\n+   var someLabel\n+   int clicks\n} file\n\nvoid function AddCustomMenu()\n{\n   AddMenu( "CustomMenu", $"resource/ui/menus/custommenu.menu", CustomMenu_Init )\n   file.menu = GetMenu( "CustomMenu" )\n+   file.someLabel = Hud_GetChild( file.menu, "SomeLabel" )\n\n+   var someButton = Hud_GetChild( file.menu, "SomeButton" )\n+   Hud_AddEventHandler( someButton, UIE_CLICK, OnSomeButtonClick )\n}\n')),(0,i.yg)("p",null,"Now you need to define the ",(0,i.yg)("inlineCode",{parentName:"p"},"OnSomeButtonClick")," callback that\\'s\ntriggered when the button is activated."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},'void function OnSomeButtonClick( var button )\n{\n    file.clicks++\n    Hud_SetText( file.someLabel, format( "clicked the button %i times", file.clicks ) )\n}\n')),(0,i.yg)("h3",{id:"adding-a-reset-button"},"Adding a Reset Button"),(0,i.yg)("p",null,"First you need to add a definition in your ",(0,i.yg)("inlineCode",{parentName:"p"},"custommenu.menu")," file:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},'ResetButton\n{\n    ControlName RuiButton\n    InheritProperties RuiSmallButton\n\n    tall 50\n    wide 250\n\n    labelText "Reset Counter"\n    textAlignment center\n\n    pin_to_sibling SomeButton\n    pin_corner_to_sibling TOP\n    pin_to_sibling_corner BOTTOM\n}\n')),(0,i.yg)("p",null,"Then add a ",(0,i.yg)("inlineCode",{parentName:"p"},"UIE_CLICK")," callback for the button. It also makes sense to\nmove the code that updates the label text to it\\'s own function so it\ncan be reused by the reset button."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-diff"},'void function AddCustomMenu()\n{\n   AddMenu( "CustomMenu", $"resource/ui/menus/custommenu.menu", CustomMenu_Init )\n   file.menu = GetMenu( "CustomMenu" )\n   file.someLabel = Hud_GetChild( file.menu, "SomeLabel" )\n\n   var someButton = Hud_GetChild( file.menu, "SomeButton" )\n+   var resetButton = Hud_GetChild( file.menu, "ResetButton" )\n\n   Hud_AddEventHandler( someButton, UIE_CLICK, OnSomeButtonClick )\n+   Hud_AddEventHandler( resetButton, UIE_CLICK, OnResetButtonClick )\n}\n\nvoid function OnSomeButtonClick( var button )\n{\n   file.clicks++\n-   Hud_SetText( file.someLabel, format( "clicked the button %i times", file.clicks ) )\n+   UpdateClickLabel()\n}\n\nvoid function OnResetButtonClick( var button )\n{\n   file.clicks = 0\n+   UpdateClickLabel()\n}\n\n+void function UpdateClickLabel()\n+{\n+   Hud_SetText( file.someLabel, format( "clicked the button %i times", file.clicks ) )\n+}\n')),(0,i.yg)("h3",{id:"resetting-the-counter-when-the-menu-is-closed"},"Resetting the Counter when the Menu is closed"),(0,i.yg)("p",null,"You can add callbacks for menu events, for example when a menu is closed\nor opened."),(0,i.yg)("p",null,"If you want to reset the counter if the menu is closed, edit\n",(0,i.yg)("inlineCode",{parentName:"p"},"AddCustomMenu")," like this:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-diff"},'void function AddCustomMenu()\n{\n   AddMenu( "CustomMenu", $"resource/ui/menus/custommenu.menu", CustomMenu_Init )\n   file.menu = GetMenu( "CustomMenu" )\n   file.someLabel = Hud_GetChild( file.menu, "SomeLabel" )\n\n   var someButton = Hud_GetChild( file.menu, "SomeButton" )\n   var resetButton = Hud_GetChild( file.menu, "ResetButton" )\n\n   Hud_AddEventHandler( someButton, UIE_CLICK, OnSomeButtonClick )\n   Hud_AddEventHandler( resetButton, UIE_CLICK, OnResetButtonClick )\n\n+   AddMenuEventHandler( file.menu, eUIEvent.MENU_CLOSE, OnCloseCustomMenu )\n}\n')),(0,i.yg)("p",null,"And define the callback ",(0,i.yg)("inlineCode",{parentName:"p"},"OnCloseCustomMenu")," to simply call\n",(0,i.yg)("inlineCode",{parentName:"p"},"OnResetButtonClick"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"void function OnCloseCustomMenu()\n{\n    OnResetButtonClick( null )\n}\n")))}m.isMDXComponent=!0}}]);