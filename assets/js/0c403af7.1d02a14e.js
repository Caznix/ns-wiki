"use strict";(self.webpackChunkns_wiki=self.webpackChunkns_wiki||[]).push([[3797],{8426:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=r(4848),s=r(8453);const i={},a="Tables",l={id:"squirrel/types/tables",title:"Tables",description:"Like arrays, tables are dynamically sized data structures that can have",source:"@site/docs/squirrel/types/tables.md",sourceDirName:"squirrel/types",slug:"/squirrel/types/tables",permalink:"/ns-wiki/docs/squirrel/types/tables",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/squirrel/types/tables.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Structs",permalink:"/ns-wiki/docs/squirrel/types/structs"},next:{title:"Typedefs",permalink:"/ns-wiki/docs/squirrel/types/typedefs"}},d={},c=[{value:"Literals",id:"literals",level:2},{value:"Primitive Tables",id:"primitive-tables",level:2},{value:"Complex Tables",id:"complex-tables",level:2}];function o(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"tables",children:"Tables"})}),"\n",(0,n.jsx)(t.p,{children:"Like arrays, tables are dynamically sized data structures that can have\r\nentries added or removed at runtime."}),"\n",(0,n.jsx)(t.p,{children:"In other languages tables might be called Hashmaps, Maps or Objects."}),"\n",(0,n.jsx)(t.p,{children:"Entries are added with a key that can subsequently be used to read that\r\nobject from the table back."}),"\n",(0,n.jsxs)(t.p,{children:["The type keyword is ",(0,n.jsx)(t.code,{children:"table"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["To index an array with a string you can write ",(0,n.jsx)(t.code,{children:"t.index"}),", or with an\r\nexpression just like in arrays with ",(0,n.jsx)(t.code,{children:'t.["index"]'}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'table t = { val = "value" }\r\nstring v = t.val\r\nstring v2 = t["val"]\n'})}),"\n",(0,n.jsx)(t.h2,{id:"literals",children:"Literals"}),"\n",(0,n.jsxs)(t.p,{children:["Table literals are comma or newline seperated expressions that are\r\ndelimited by ",(0,n.jsx)(t.code,{children:"{"})," and ",(0,n.jsx)(t.code,{children:"}"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["Each entry needs to have a key, seperated from the initial value with a\r\n",(0,n.jsx)(t.code,{children:"="}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["Table keys will be by default strings if you just write their identifier\r\nin the literal. However they can also be any expression if wrapped with\r\n",(0,n.jsx)(t.code,{children:"["})," and ",(0,n.jsx)(t.code,{children:"]"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'table t = { key1 = 1, key2 = "2" }\r\ntable t2 = {\r\n randomValue = getSomethingRandom()\r\n [1] = 0x1\r\n}\r\n\r\nprintt( t["key1"], t2[1] ) // 1 1\n'})}),"\n",(0,n.jsx)(t.h2,{id:"primitive-tables",children:"Primitive Tables"}),"\n",(0,n.jsx)(t.p,{children:"Like arrays primitive tables can hold any type, both as values and keys."}),"\n",(0,n.jsxs)(t.p,{children:["Any value of key of the table will therefore be ",(0,n.jsx)(t.code,{children:"var"})," if retrieved."]}),"\n",(0,n.jsx)(t.h2,{id:"complex-tables",children:"Complex Tables"}),"\n",(0,n.jsx)(t.p,{children:"Complex tables are tables that have their content types defined. It is\r\nnecessary to both define the key and value types."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"table<string, int> numbers = {\r\n one = 1,\r\n two = 2,\r\n three = 3,\r\n four = 4,\r\n five = 5,\r\n six = 6,\r\n seven = 7,\r\n eight = 8,\r\n nine = 9\r\n}\n"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>l});var n=r(6540);const s={},i=n.createContext(s);function a(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);