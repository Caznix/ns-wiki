"use strict";(self.webpackChunkns_wiki=self.webpackChunkns_wiki||[]).push([[6539],{5680:(e,r,t)=>{t.d(r,{xA:()=>u,yg:()=>m});var n=t(6540);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=n.createContext({}),s=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},u=function(e){var r=s(e.components);return n.createElement(i.Provider,{value:r},e.children)},p="mdxType",y={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(t),f=o,m=p["".concat(i,".").concat(f)]||p[f]||y[f]||a;return t?n.createElement(m,l(l({ref:r},u),{},{components:t})):n.createElement(m,l({ref:r},u))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=f;var c={};for(var i in r)hasOwnProperty.call(r,i)&&(c[i]=r[i]);c.originalType=e,c[p]="string"==typeof e?e:o,l[1]=c;for(var s=2;s<a;s++)l[s]=t[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},6243:(e,r,t)=>{t.r(r),t.d(r,{contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>i});var n=t(8168),o=(t(6540),t(5680));const a={},l="Collision & Tracing",c={unversionedId:"source/reference/respawn/native_server/collision",id:"source/reference/respawn/native_server/collision",isDocsHomePage:!1,title:"Collision & Tracing",description:"Do muliple LOS checks, early out if any return true. Runs on multiple",source:"@site/docs/source/reference/respawn/native_server/collision.md",sourceDirName:"source/reference/respawn/native_server",slug:"/source/reference/respawn/native_server/collision",permalink:"/ns-wiki/docs/source/reference/respawn/native_server/collision",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/source/reference/respawn/native_server/collision.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Code Callbacks",permalink:"/ns-wiki/docs/source/reference/respawn/native_server/codecallback"},next:{title:"ConVars",permalink:"/ns-wiki/docs/source/reference/respawn/native_server/convars"}},i=[],s={toc:i},u="wrapper";function p(e){let{components:r,...t}=e;return(0,o.yg)(u,(0,n.A)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"collision--tracing"},"Collision & Tracing"),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"Do muliple LOS checks, early out if any return true. Runs on multiple\nthreads."),(0,o.yg)("p",{parentName:"blockquote"},(0,o.yg)("inlineCode",{parentName:"p"},"mask"),": ",(0,o.yg)("inlineCode",{parentName:"p"},"TRACE_MASK_*")),(0,o.yg)("p",{parentName:"blockquote"},(0,o.yg)("inlineCode",{parentName:"p"},"group"),": ",(0,o.yg)("inlineCode",{parentName:"p"},"TRACE_COLLISION_GROUP_*"))),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"Does a trace and returns struct of result values.")),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"Does a high-detail (per poly on static models) trace and returns\nstruct of result values.")),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"Does a hull trace and returns table of result values.")),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"Does a trace and returns table of result values.")),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"Does a trace and returns the distance from ",(0,o.yg)("inlineCode",{parentName:"p"},"startPos")," to hit.")),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"Does a trace and returns the distance from ",(0,o.yg)("inlineCode",{parentName:"p"},"startPos")," to hit.")),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"Does a trace and returns all ents along a line.")),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"Returns an array of entities that are inside of a cone and visible to\nthe apex")),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"Check for vortexSphere collisions between two points.")))}p.isMDXComponent=!0}}]);