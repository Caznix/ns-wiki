"use strict";(self.webpackChunkns_wiki=self.webpackChunkns_wiki||[]).push([[3835],{8772:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>c,frontMatter:()=>r,metadata:()=>a,toc:()=>h});var n=s(4848),i=s(8453);const r={},d="Textures",a={id:"repak/assets/texture",title:"Textures",description:"Textures are the foundation of some RPak asset types. They cannot be",source:"@site/docs/repak/assets/texture.md",sourceDirName:"repak/assets",slug:"/repak/assets/texture",permalink:"/ns-wiki/docs/repak/assets/texture",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/repak/assets/texture.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Materials - TODO",permalink:"/ns-wiki/docs/repak/assets/material"},next:{title:"UI Image Atlases",permalink:"/ns-wiki/docs/repak/assets/uiatlas"}},l={},h=[{value:"Examples:",id:"examples",level:2},{value:"1. Basic Texture Asset - No streaming",id:"1-basic-texture-asset---no-streaming",level:3},{value:"2. Streamed Texture Asset",id:"2-streamed-texture-asset",level:3},{value:"Asset Structure:",id:"asset-structure",level:2},{value:"<code>$type</code>",id:"type",level:3},{value:"<code>path</code>",id:"path",level:3},{value:"<code>starpakPath</code>",id:"starpakpath",level:3},{value:"<code>disableStreaming</code>",id:"disablestreaming",level:3}];function o(e){const t={admonition:"admonition",code:"code",div:"div",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"textures",children:"Textures"})}),"\n",(0,n.jsx)(t.p,{children:"Textures are the foundation of some RPak asset types. They cannot be\r\nused directly by the game, but are instead referenced by other asset\r\ntypes which the game can use by itself."}),"\n",(0,n.jsx)(t.p,{children:"The image used by a texture must be in the .dds format and must be in\r\none of the following compression types:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"BC1 SRGB"}),"\n",(0,n.jsx)(t.li,{children:"BC2 SRGB"}),"\n",(0,n.jsx)(t.li,{children:"BC3 SRGB"}),"\n",(0,n.jsx)(t.li,{children:"BC7"}),"\n",(0,n.jsx)(t.li,{children:"BC7 SRGB"}),"\n",(0,n.jsx)(t.li,{children:"DXT1"}),"\n",(0,n.jsx)(t.li,{children:"DXT3"}),"\n",(0,n.jsx)(t.li,{children:"DXT5"}),"\n",(0,n.jsx)(t.li,{children:"BC4U"}),"\n",(0,n.jsx)(t.li,{children:"BC5U UNORM"}),"\n"]}),"\n",(0,n.jsxs)(t.admonition,{type:"warning",children:[(0,n.jsx)(t.div,{children:(0,n.jsx)(t.p,{children:"Warning"})}),(0,n.jsx)(t.p,{children:'SRGB DDS compression types are preferred, as they can prevent the\r\ntexture\'s colour from looking "washed out"'})]}),"\n",(0,n.jsx)(t.h2,{id:"examples",children:"Examples:"}),"\n",(0,n.jsx)(t.h3,{id:"1-basic-texture-asset---no-streaming",children:"1. Basic Texture Asset - No streaming"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\r\n    "$type": "txtr",\r\n    "path": "textures/models/humans/test_texture",\r\n    "disableStreaming": true\r\n}\n'})}),"\n",(0,n.jsxs)(t.admonition,{type:"note",children:[(0,n.jsx)(t.div,{children:(0,n.jsx)(t.p,{children:"Note"})}),(0,n.jsxs)(t.p,{children:["The image file in this texture asset will be called ",(0,n.jsx)(t.code,{children:"test_texture.dds"}),"\r\nand will be at ",(0,n.jsx)(t.code,{children:"<ASSETSDIR>/textures/models/humans/test_texture.dds"})]})]}),"\n",(0,n.jsxs)(t.admonition,{type:"note",children:[(0,n.jsx)(t.div,{children:(0,n.jsx)(t.p,{children:"Note"})}),(0,n.jsxs)(t.p,{children:["Because ",(0,n.jsx)(t.code,{children:"disableStreaming"})," is ",(0,n.jsx)(t.code,{children:"true"}),", this texture will not be stored in\r\na .starpak file, and all mip levels will be stored in the .rpak file"]})]}),"\n",(0,n.jsx)(t.h3,{id:"2-streamed-texture-asset",children:"2. Streamed Texture Asset"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\r\n    "$type": "txtr",\r\n    "path": "textures/models/humans/test_texture_2",\r\n    "starpakPath": "test_texture_2.starpak"\r\n}\n'})}),"\n",(0,n.jsxs)(t.admonition,{type:"note",children:[(0,n.jsx)(t.div,{children:(0,n.jsx)(t.p,{children:"Note"})}),(0,n.jsxs)(t.p,{children:["The image file in this texture asset will be called ",(0,n.jsx)(t.code,{children:"test_texture_2.dds"}),"\r\nand will be at ",(0,n.jsx)(t.code,{children:"<ASSETSDIR>/textures/models/humans/test_texture_2.dds"})]})]}),"\n",(0,n.jsxs)(t.admonition,{type:"note",children:[(0,n.jsx)(t.div,{children:(0,n.jsx)(t.p,{children:"Note"})}),(0,n.jsxs)(t.p,{children:["Because ",(0,n.jsx)(t.code,{children:"disableStreaming"})," is not present, this texture will have it's\r\nhigher resolution mip levels stored in ",(0,n.jsx)(t.code,{children:"test_texture_2.starpak"}),", as\r\ndefined by the ",(0,n.jsx)(t.code,{children:"starpakPath"}),". It will not use the default ",(0,n.jsx)(t.code,{children:"starpakPath"}),"\r\nif one is defined outside of the ",(0,n.jsx)(t.code,{children:"files"})," array"]})]}),"\n",(0,n.jsx)(t.h2,{id:"asset-structure",children:"Asset Structure:"}),"\n",(0,n.jsx)(t.h3,{id:"type",children:(0,n.jsx)(t.code,{children:"$type"})}),"\n",(0,n.jsxs)(t.p,{children:["For an asset to be a texture asset, the ",(0,n.jsx)(t.code,{children:"$type"})," field must be ",(0,n.jsx)(t.code,{children:'"txtr"'}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"path",children:(0,n.jsx)(t.code,{children:"path"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"path"})," field of a texture asset is used to determine the location in\r\nthe RPak's ",(0,n.jsx)(t.code,{children:"assetsDir"})," that the image file is in."]}),"\n",(0,n.jsx)(t.p,{children:"It is also used as the asset's unique identifier, allowing other assets\r\nto reference and use it."}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"path"})," field must start with ",(0,n.jsx)(t.code,{children:"textures/"})," and must not end with a\r\nfile extension."]}),"\n",(0,n.jsxs)(t.div,{children:[(0,n.jsx)(t.div,{children:(0,n.jsx)(t.p,{children:"Error"})}),(0,n.jsxs)(t.p,{children:["If RePak is unable to locate a file at the given ",(0,n.jsx)(t.code,{children:"path"}),", it will output\r\nthe following error to the console:"]}),(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Failed to find texture source file %s. Exiting..."})," where ",(0,n.jsx)(t.code,{children:"%s"})," is the\r\n",(0,n.jsx)(t.code,{children:"path"})," field of the texture."]})]}),"\n",(0,n.jsxs)(t.div,{children:[(0,n.jsx)(t.div,{children:(0,n.jsx)(t.p,{children:"Error"})}),(0,n.jsxs)(t.p,{children:["If the file at the given ",(0,n.jsx)(t.code,{children:"path"})," is not a .dds file, RePak will output\r\nthe following error to the console:"]}),(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Attempted to add txtr asset '%s' that was not a valid DDS file (invalid magic)."}),"\r\nwhere ",(0,n.jsx)(t.code,{children:"%s"})," is the ",(0,n.jsx)(t.code,{children:"path"})," field of the texture."]})]}),"\n",(0,n.jsxs)(t.div,{children:[(0,n.jsx)(t.div,{children:(0,n.jsx)(t.p,{children:"Error"})}),(0,n.jsx)(t.p,{children:"If an unsupported .dds compression type is used, RePak will output the\r\nfollowing error to the console:"}),(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Attempted to add txtr asset '%s' that was not using a supported DDS type. Exiting..."}),"\r\nwhere ",(0,n.jsx)(t.code,{children:"%s"})," is the ",(0,n.jsx)(t.code,{children:"path"})," field of the texture."]})]}),"\n",(0,n.jsx)(t.h3,{id:"starpakpath",children:(0,n.jsx)(t.code,{children:"starpakPath"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"starpakPath"})," field of a texture asset determines the path of the\r\nstarpak in which the higher resolution mip levels should be stored."]}),"\n",(0,n.jsxs)(t.p,{children:["If no ",(0,n.jsx)(t.code,{children:"starpakPath"})," value is specified, RePak will default to using the\r\ndefault ",(0,n.jsx)(t.code,{children:"starpakPath"}),", defined at file scope in the map file."]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"starpakPath"})," field should be a string, and importantly, should end\r\nin ",(0,n.jsx)(t.code,{children:".starpak"}),"."]}),"\n",(0,n.jsxs)(t.admonition,{type:"note",children:[(0,n.jsx)(t.div,{children:(0,n.jsx)(t.p,{children:"Note"})}),(0,n.jsxs)(t.p,{children:["If the starpak name ends in ",(0,n.jsx)(t.code,{children:"_hotswap.starpak"})," (e.g.\r\n",(0,n.jsx)(t.code,{children:"my_thing_hotswap.starpak"}),") then Titanfall 2 will view it as optional.\r\nThis allows the starpak to be moved, removed, or replaced while the game\r\nis running and streaming the texture. This can be useful for debugging."]})]}),"\n",(0,n.jsxs)(t.div,{children:[(0,n.jsx)(t.div,{children:(0,n.jsx)(t.p,{children:"Error"})}),(0,n.jsxs)(t.p,{children:["If the ",(0,n.jsx)(t.code,{children:"starpakPath"})," is not present, and no ",(0,n.jsx)(t.code,{children:"starpakPath"})," is defined at\r\nfile scope, RePak will output the following error to the console."]}),(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"attempted to add asset '%s' as a streaming asset, but no starpak files were available. to fix: add 'starpakPath' as an rpak-wide variable or: add 'starpakPath' as an asset specific variable"}),"\r\nwhere %s is the ",(0,n.jsx)(t.code,{children:"path"})," of the texture asset"]})]}),"\n",(0,n.jsx)(t.h3,{id:"disablestreaming",children:(0,n.jsx)(t.code,{children:"disableStreaming"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"disableStreaming"})," field of a texture asset determines if the\r\ntexture should use a starpak to store the higher resolution mip levels."]}),"\n",(0,n.jsxs)(t.p,{children:["It should be a boolean value, with ",(0,n.jsx)(t.code,{children:"true"})," disabling the use of a\r\nstarpak,"]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"disableStreaming"})," defaults to ",(0,n.jsx)(t.code,{children:"false"})," if it is not present."]})]})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>d,x:()=>a});var n=s(6540);const i={},r=n.createContext(i);function d(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);