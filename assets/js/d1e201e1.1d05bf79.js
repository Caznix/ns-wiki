"use strict";(self.webpackChunkns_wiki=self.webpackChunkns_wiki||[]).push([[2696],{5979:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>l,frontMatter:()=>t,metadata:()=>o,toc:()=>d});var a=r(4848),s=r(8453);const t={},c="Custom Damage Source IDs",o={id:"reference/northstar/customdamagesources",title:"Custom Damage Source IDs",description:"Custom damage source IDs can be used to create new damage source IDs for",source:"@site/docs/reference/northstar/customdamagesources.md",sourceDirName:"reference/northstar",slug:"/reference/northstar/customdamagesources",permalink:"/ns-wiki/docs/reference/northstar/customdamagesources",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/reference/northstar/customdamagesources.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Chathooks",permalink:"/ns-wiki/docs/reference/northstar/chathooks"},next:{title:"Dependency Constants and Compiler Directives",permalink:"/ns-wiki/docs/reference/northstar/dependencyconstants"}},i={},d=[];function u(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"custom-damage-source-ids",children:"Custom Damage Source IDs"})}),"\n",(0,a.jsx)(n.p,{children:"Custom damage source IDs can be used to create new damage source IDs for\r\nmodded weapons, abilities, damage, etc."}),"\n",(0,a.jsx)(n.p,{children:"They can only be registered server-side and cannot modify existing\r\ndamage source IDs. Clients pre-1.9.4 will not see the custom damage\r\nsources in the obituary."}),"\n",(0,a.jsx)(n.p,{children:"To add a single damage source ID, use:"}),"\n",(0,a.jsx)(n.p,{children:"To add multiple damage source IDs, use"}),"\n",(0,a.jsx)(n.p,{children:"The first string parameter is the in-code weapon name while the latter\r\nis the name displayed in the obituary."}),"\n",(0,a.jsxs)(n.p,{children:["Damage source IDs should be added in ",(0,a.jsx)(n.code,{children:'"After"'})," server callbacks."]}),"\n",(0,a.jsxs)(n.p,{children:["For example, we can call the methods from a function in\r\n",(0,a.jsx)(n.code,{children:"damage_source_example.nut"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'global function SimpleSourceInit\r\n\r\nvoid function SimpleSourceInit()\r\n{\r\n    // Server-side code\r\n\r\n    // Register a single damage source ID\r\n    RegisterWeaponDamageSource( "mp_weapon_minigun", "Minigun" )\r\n\r\n    // Register multiple damage source IDs\r\n    RegisterWeaponDamageSources(\r\n        {\r\n            mp_titanweapon_barrage_core_launcher = "Barrage Core",\r\n            mp_titanweapon_grenade_launcher = "Grenade Launcher"\r\n        }\r\n    )\r\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Then call the function as an ",(0,a.jsx)(n.code,{children:'"After"'})," server callback in the\r\n",(0,a.jsx)(n.code,{children:"mod.json"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'{\r\n    "Scripts": [\r\n        {\r\n            "Path": "damage_source_example.nut",\r\n            "RunOn": "SERVER && MP",\r\n            "ServerCallback": {\r\n                "After": "SimpleSourceInit"\r\n            }\r\n        },\r\n    ]\r\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Now, these damage source IDs can be referenced in script like so:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"eDamageSourceId.mp_weapon_minigun\r\neDamageSourceId.mp_titanweapon_barrage_core_launcher\r\neDamageSourceId.mp_titanweapon_grenade_launcher\n"})}),"\n",(0,a.jsx)(n.p,{children:"and their corresponding precached weapons (if applicable) will\r\nautomatically use their custom damage source IDs."})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>o});var a=r(6540);const s={},t=a.createContext(s);function c(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);