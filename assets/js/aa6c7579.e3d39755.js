"use strict";(self.webpackChunkns_wiki=self.webpackChunkns_wiki||[]).push([[9164],{5495:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>o});var r=s(4848),i=s(8453);const t={},a="Map Files",l={id:"repak/map",title:"Map Files",description:"Examples:",source:"@site/docs/repak/map.md",sourceDirName:"repak",slug:"/repak/map",permalink:"/ns-wiki/docs/repak/map",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/repak/map.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"UI Image Atlases",permalink:"/ns-wiki/docs/repak/assets/uiatlas"},next:{title:"Introduction",permalink:"/ns-wiki/docs/reverse-engineering/introduction"}},d={},o=[{value:"Examples:",id:"examples",level:2},{value:"1. Bare Minimum - No Assets",id:"1-bare-minimum---no-assets",level:3},{value:"2. Single Texture + Single Starpak",id:"2-single-texture--single-starpak",level:3},{value:"3. Multiple Textures + Multiple Starpaks",id:"3-multiple-textures--multiple-starpaks",level:3},{value:"Structure:",id:"structure",level:2},{value:"<code>name</code>",id:"name",level:3},{value:"<code>assetsDir</code>",id:"assetsdir",level:3},{value:"<code>outputDir</code>",id:"outputdir",level:3},{value:"<code>version</code>",id:"version",level:3},{value:"List of known <code>version</code> values:",id:"list-of-known-version-values",level:4},{value:"<code>starpakPath</code>",id:"starpakpath",level:3},{value:"<code>files</code>",id:"files",level:3}];function c(e){const n={admonition:"admonition",code:"code",div:"div",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"map-files",children:"Map Files"})}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples:"}),"\n",(0,r.jsx)(n.h3,{id:"1-bare-minimum---no-assets",children:"1. Bare Minimum - No Assets"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"example1.json"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n    "version": 7\r\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"root\r\n\u251c\u2500\u2500 RePak.exe\r\n\u251c\u2500\u2500 example1.json\r\n\u2514\u2500\u2500 build\r\n    \u2514\u2500 example1.rpak\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.div,{children:(0,r.jsx)(n.p,{children:"Note"})}),(0,r.jsxs)(n.p,{children:["This example map file is honestly pretty useless. It has no assets,\r\nbecause there is no ",(0,r.jsx)(n.code,{children:"files"})," field."]}),(0,r.jsxs)(n.p,{children:["It also will have the name ",(0,r.jsx)(n.code,{children:"new.rpak"})," and will be created in the\r\n",(0,r.jsx)(n.code,{children:"./build"})," folder."]})]}),"\n",(0,r.jsx)(n.h3,{id:"2-single-texture--single-starpak",children:"2. Single Texture + Single Starpak"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"example2.json"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n    "name": "example2",\r\n    "assetsDir": "../depot",\r\n    "outputDir": "../output",\r\n    "version": 7,\r\n    "starpakPath": "example2.starpak",\r\n    "files":\r\n    [\r\n        {\r\n            "$type": "txtr",\r\n            "path": "textures/models/my_texture"\r\n        }\r\n    ]\r\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"root\r\n\u251c\u2500\u2500 RePak.exe\r\n\u251c\u2500\u2500 maps\r\n|   \u2514\u2500 example2.json\r\n\u251c\u2500\u2500 depot\r\n|   \u2514\u2500 textures\r\n|       \u2514\u2500 models\r\n|           \u2514\u2500 my_texture.dds\r\n\u2514\u2500\u2500 output\r\n    \u251c\u2500 example2.starpak\r\n    \u2514\u2500 example2.rpak\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.div,{children:(0,r.jsx)(n.p,{children:"Note"})}),(0,r.jsxs)(n.p,{children:["This example map file creates an RPak named ",(0,r.jsx)(n.code,{children:"example2.rpak"})," which\r\ncontains 1 texture asset. This texture will have it's higher resolution\r\nmip levels stored in example2.starpak"]})]}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.div,{children:(0,r.jsx)(n.p,{children:"Note"})}),(0,r.jsxs)(n.p,{children:["The texture will replace any vanilla textures that have the same path. (\r\n",(0,r.jsx)(n.code,{children:"textures/models/my_texture"})," )"]}),(0,r.jsx)(n.p,{children:"This is useful for creating basic skins and camos."})]}),"\n",(0,r.jsx)(n.h3,{id:"3-multiple-textures--multiple-starpaks",children:"3. Multiple Textures + Multiple Starpaks"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"example3.json"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n    "name": "example3",\r\n    "assetsDir": "../depot",\r\n    "outputDir": "../output",\r\n    "version": 7,\r\n    "starpakPath": "example3.starpak",\r\n    "files":\r\n    [\r\n        {\r\n            "$type": "txtr",\r\n            "path": "textures/models/my_texture_col"\r\n        },\r\n        {\r\n            "$type": "txtr",\r\n            "path": "textures/models/my_texture_nml"\r\n        },\r\n        {\r\n            "$type": "txtr",\r\n            "starpakPath": "example3-spc.starpak",\r\n            "path": "textures/models/my_texture_spc"\r\n        }\r\n    ]\r\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"root\r\n\u251c\u2500\u2500 RePak.exe\r\n\u251c\u2500\u2500 maps\r\n|   \u2514\u2500 example3.json\r\n\u251c\u2500\u2500 depot\r\n|   \u2514\u2500 textures\r\n|       \u2514\u2500 models\r\n|           \u251c\u2500 my_texture_col.dds\r\n|           \u251c\u2500 my_texture_nml.dds\r\n|           \u2514\u2500 my_texture_spc.dds\r\n\u2514\u2500\u2500 output\r\n    \u251c\u2500 example3.starpak\r\n    \u251c\u2500 example3-spc.starpak\r\n    \u2514\u2500 example3.rpak\n"})}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.div,{children:(0,r.jsx)(n.p,{children:"Note"})}),(0,r.jsxs)(n.p,{children:["This example map file creates an RPak named ",(0,r.jsx)(n.code,{children:"example3.rpak"})," which\r\ncontains 3 texture assets. These textures each have their higher\r\nresolution mip levels stored in starpaks."]}),(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"my_texture_col"})," and ",(0,r.jsx)(n.code,{children:"mp_texture_nml"})," use ",(0,r.jsx)(n.code,{children:"example3.starpak"}),", as they do\r\nnot specify their own ",(0,r.jsx)(n.code,{children:"starpakPath"}),". This makes them use the default\r\n",(0,r.jsx)(n.code,{children:"starpakPath"})," that is defined at the file scope, instead of in the\r\nindividual textures."]}),(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"my_texture_spc"})," uses ",(0,r.jsx)(n.code,{children:"example3-spc.starpak"}),", as it specifies it's own\r\n",(0,r.jsx)(n.code,{children:"starpakPath"}),"."]})]}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.div,{children:(0,r.jsx)(n.p,{children:"Note"})}),(0,r.jsx)(n.p,{children:"This RPak is a good example of a skin that would normally require the\r\nskin tool to install. The advantage of this method is that the skin can\r\nbe uninstalled or temporarily disabled when packed as a mod."})]}),"\n",(0,r.jsx)(n.h2,{id:"structure",children:"Structure:"}),"\n",(0,r.jsx)(n.h3,{id:"name",children:(0,r.jsx)(n.code,{children:"name"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"name"})," field of a map file determines the name of the resulting\r\nRPak."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"name"})," is appended with ",(0,r.jsx)(n.code,{children:".rpak"})," and defaults to ",(0,r.jsx)(n.code,{children:"new"})," if no ",(0,r.jsx)(n.code,{children:"name"}),"\r\nis provided. This results in a default RPak called ",(0,r.jsx)(n.code,{children:"new.rpak"}),"."]}),"\n",(0,r.jsxs)(n.admonition,{type:"warning",children:[(0,r.jsx)(n.div,{children:(0,r.jsx)(n.p,{children:"Warning"})}),(0,r.jsxs)(n.p,{children:["In the event that no ",(0,r.jsx)(n.code,{children:"name"})," is provided in the map file, RePak will\r\noutput the following warning to the console:"]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"Map file should have a 'name' field containing the string name for the new rpak, but none was provided. Defaulting to 'new.rpak' and continuing...\\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"assetsdir",children:(0,r.jsx)(n.code,{children:"assetsDir"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"assetsDir"})," field of a map file determines the root path which the\r\nprogram combines with the ",(0,r.jsx)(n.code,{children:"path"})," for assets in order to find the correct\r\nfile. This path may be a relative path, or an absolute path."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"assetsDir"})," provided in the map file is appended with a slash ( ",(0,r.jsx)(n.code,{children:"\\"}),"\r\n) if necessary"]}),"\n",(0,r.jsxs)(n.admonition,{type:"warning",children:[(0,r.jsx)(n.div,{children:(0,r.jsx)(n.p,{children:"Warning"})}),(0,r.jsxs)(n.p,{children:["If no ",(0,r.jsx)(n.code,{children:"assetsDir"})," is provided, it defaults to the working directory (\r\n",(0,r.jsx)(n.code,{children:".\\"})," ) as well as outputting the following warning to the console:"]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"No assetsDir field provided. Assuming that everything is relative to the working directory.\\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"outputdir",children:(0,r.jsx)(n.code,{children:"outputDir"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"outputDir"})," field of a map file determines the folder that the\r\nprogram will write the RPak and StaRPak files to once they have been\r\ncreated. This path may be a relative path, or an absolute path."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"outputDir"})," provided in the map file is appended with a slash ( ",(0,r.jsx)(n.code,{children:"\\"}),"\r\n) if necessary"]}),"\n",(0,r.jsxs)(n.p,{children:["If no ",(0,r.jsx)(n.code,{children:"outputDir"})," is provided in the map file, RePak defaults to\r\n",(0,r.jsx)(n.code,{children:".\\build\\"})]}),"\n",(0,r.jsx)(n.h3,{id:"version",children:(0,r.jsx)(n.code,{children:"version"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"version"})," field of a map file determines the RPak version that RePak\r\nwill create."]}),"\n",(0,r.jsxs)(n.div,{children:[(0,r.jsx)(n.div,{children:(0,r.jsx)(n.p,{children:"Error"})}),(0,r.jsxs)(n.p,{children:["If no ",(0,r.jsx)(n.code,{children:"version"})," field is provided, RePak will output the following error\r\nand the program will stop:"]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"Map file doesn't specify an RPak version\\nUse 'version: 7' for Titanfall 2 or 'version: 8' for Apex\\n"})})]}),"\n",(0,r.jsxs)(n.div,{children:[(0,r.jsx)(n.div,{children:(0,r.jsx)(n.p,{children:"Error"})}),(0,r.jsxs)(n.p,{children:["If an invalid ",(0,r.jsx)(n.code,{children:"version"})," field is provided, RePak will output the\r\nfollowing error and the program will stop:"]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"Invalid RPak version specified\\nUse 'version: 7' for Titanfall 2 or 'version: 8' for Apex\\n"})})]}),"\n",(0,r.jsxs)(n.h4,{id:"list-of-known-version-values",children:["List of known ",(0,r.jsx)(n.code,{children:"version"})," values:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"6"}),": Titanfall 2: Tech Test ",(0,r.jsx)(n.strong,{children:"[UNSUPPORTED]"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"7"}),": Titanfall 2"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"8"}),": Apex Legends"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"starpakpath",children:(0,r.jsx)(n.code,{children:"starpakPath"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"starpakPath"})," field of a map file determines the default starpak\r\npath for textures (and other streamed assets) to use."]}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.div,{children:(0,r.jsx)(n.p,{children:"Note"})}),(0,r.jsxs)(n.p,{children:["If the starpak name ends in ",(0,r.jsx)(n.code,{children:"_hotswap.starpak"})," (e.g.\r\n",(0,r.jsx)(n.code,{children:"my_thing_hotswap.starpak"}),") then Titanfall 2 will view it as optional.\r\nThis allows the starpak to be moved, removed, or replaced while the game\r\nis running and streaming the texture. This can be useful for debugging."]})]}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.div,{children:(0,r.jsx)(n.p,{children:"Note"})}),(0,r.jsxs)(n.p,{children:["RePak will not throw any errors if no ",(0,r.jsx)(n.code,{children:"starpakPath"})," field is specified,\r\nhowever the individual textures may throw errors if they do not have a\r\n",(0,r.jsx)(n.code,{children:"starpakPath"})," specified"]})]}),"\n",(0,r.jsx)(n.h3,{id:"files",children:(0,r.jsx)(n.code,{children:"files"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"files"})," field of a map file is an array of JSON objects, each one\r\nrepresenting an RPak asset."]}),"\n",(0,r.jsxs)(n.p,{children:["RePak will not throw any errors if no ",(0,r.jsx)(n.code,{children:"files"})," field is specified,\r\nhowever the resulting RPak will contain no assets, rendering it useless."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var r=s(6540);const i={},t=r.createContext(i);function a(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);