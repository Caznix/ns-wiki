"use strict";(self.webpackChunkns_wiki=self.webpackChunkns_wiki||[]).push([[7129],{5680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>m});var r=t(6540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(t),y=i,m=p["".concat(c,".").concat(y)]||p[y]||d[y]||o;return t?r.createElement(m,a(a({ref:n},u),{},{components:t})):r.createElement(m,a({ref:n},u))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=y;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[p]="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},5206:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(8168),i=(t(6540),t(5680));const o={},a="Introduction",l={unversionedId:"squirrel/intro",id:"squirrel/intro",isDocsHomePage:!1,title:"Introduction",description:"Squirrel is a high level imperative,",source:"@site/docs/squirrel/intro.md",sourceDirName:"squirrel",slug:"/squirrel/intro",permalink:"/ns-wiki/docs/squirrel/intro",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/squirrel/intro.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"index",permalink:"/ns-wiki/docs/squirrel/index"},next:{title:"networking",permalink:"/ns-wiki/docs/squirrel/networking"}},c=[],s={toc:c},u="wrapper";function p(e){let{components:n,...t}=e;return(0,i.yg)(u,(0,r.A)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"introduction"},"Introduction"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"http://squirrel-lang.org/"},"Squirrel")," is a high level imperative,\nobject-oriented programming language used in Titanfall to script large\namounts of content in the game."),(0,i.yg)("p",null,"Respawn modified large parts of the language to fit their needs, for\nexample adding a static type compiler to the language."),(0,i.yg)("p",null,"Squirrel still allows you to write dynamically typed code but this is\ndiscouraged if possible."),(0,i.yg)("p",null,"The syntax of squirrel is very similar to C++ or Javascript and very\neasy to learn."),(0,i.yg)("p",null,"The programmer doesn\\'t need to think about memory management in scripts\nsince all objects are refcounted and the garbage collector can be\ninvoked manually."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"int function fibonacci( int n )\n{\n if ( n < 2 )\n   return n\n\n return fibonacci( n - 1 ) + fibonacci( n - 2 )\n}\n")),(0,i.yg)("p",null,"The language provides easy interfaces for coroutines and asynchronous\ncode."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"void main()\n{\n thread timer( 1.0, timercallback ) \n}\n\nvoid function timercallback( int iteration )\n{\n print( iteration ) \n}\n\n// call the callback function every n seconds\nvoid function timer( float n, void functionref( int ) callback )\n{\n int iterations\n while ( true )\n {\n   wait n\n   iterations += 1\n   callback( iterations )\n }\n}\n")),(0,i.yg)("p",null,"Signals and Flags allow you to control code execution based on events\nthat happen elsewhere in the code or in the ingame world."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},'void main()\n{\n AddCallback_OnPlayerRespawned( OnPlayerRespawned )\n}\n\nvoid function OnPlayerRespawned( entity player )\n{\n thread CountPlayerTimeAlive( Time() ) // execute this function as threaded so we can use Signals in there\n}\n\nvoid function CountPlayerTimeAlive( entity player, float time )\n{\n player.WaitSignal( "OnDestroy" ) // wait until the player dies or disconnects\n print( Time() - time ) // print how long the player was alive\n}\n')))}p.isMDXComponent=!0}}]);