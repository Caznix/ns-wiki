"use strict";(self.webpackChunkns_wiki=self.webpackChunkns_wiki||[]).push([[9164],{5680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>y});var a=t(6540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=a.createContext({}),s=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=s(e.components);return a.createElement(o.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=s(t),g=i,y=u["".concat(o,".").concat(g)]||u[g]||m[g]||r;return t?a.createElement(y,l(l({ref:n},d),{},{components:t})):a.createElement(y,l({ref:n},d))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,l=new Array(r);l[0]=g;var p={};for(var o in n)hasOwnProperty.call(n,o)&&(p[o]=n[o]);p.originalType=e,p[u]="string"==typeof e?e:i,l[1]=p;for(var s=2;s<r;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},3628:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>o});var a=t(8168),i=(t(6540),t(5680));const r={},l="Map Files",p={unversionedId:"repak/map",id:"repak/map",isDocsHomePage:!1,title:"Map Files",description:"Examples:",source:"@site/docs/repak/map.md",sourceDirName:"repak",slug:"/repak/map",permalink:"/ns-wiki/docs/repak/map",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/repak/map.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Asset Types",permalink:"/ns-wiki/docs/repak/index"},next:{title:"Introduction",permalink:"/ns-wiki/docs/reverse-engineering/introduction"}},o=[{value:"Examples:",id:"examples",children:[{value:"1. Bare Minimum - No Assets",id:"1-bare-minimum---no-assets",children:[]},{value:"2. Single Texture + Single Starpak",id:"2-single-texture--single-starpak",children:[]},{value:"3. Multiple Textures + Multiple Starpaks",id:"3-multiple-textures--multiple-starpaks",children:[]}]},{value:"Structure:",id:"structure",children:[{value:"<code>name</code>",id:"name",children:[]},{value:"<code>assetsDir</code>",id:"assetsdir",children:[]},{value:"<code>outputDir</code>",id:"outputdir",children:[]},{value:"<code>version</code>",id:"version",children:[]},{value:"<code>starpakPath</code>",id:"starpakpath",children:[]},{value:"<code>files</code>",id:"files",children:[]}]}],s={toc:o},d="wrapper";function u(e){let{components:n,...t}=e;return(0,i.yg)(d,(0,a.A)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"map-files"},"Map Files"),(0,i.yg)("h2",{id:"examples"},"Examples:"),(0,i.yg)("h3",{id:"1-bare-minimum---no-assets"},"1. Bare Minimum - No Assets"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"example1.json")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "version": 7\n}\n')),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-text"},"root\n\u251c\u2500\u2500 RePak.exe\n\u251c\u2500\u2500 example1.json\n\u2514\u2500\u2500 build\n    \u2514\u2500 example1.rpak\n")),(0,i.yg)("p",null,":::: note\n::: title\nNote\n:::"),(0,i.yg)("p",null,"This example map file is honestly pretty useless. It has no assets,\nbecause there is no ",(0,i.yg)("inlineCode",{parentName:"p"},"files")," field."),(0,i.yg)("p",null,"It also will have the name ",(0,i.yg)("inlineCode",{parentName:"p"},"new.rpak")," and will be created in the\n",(0,i.yg)("inlineCode",{parentName:"p"},"./build")," folder.\n::::"),(0,i.yg)("h3",{id:"2-single-texture--single-starpak"},"2. Single Texture + Single Starpak"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"example2.json")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "example2",\n    "assetsDir": "../depot",\n    "outputDir": "../output",\n    "version": 7,\n    "starpakPath": "example2.starpak",\n    "files":\n    [\n        {\n            "$type": "txtr",\n            "path": "textures/models/my_texture"\n        }\n    ]\n}\n')),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-text"},"root\n\u251c\u2500\u2500 RePak.exe\n\u251c\u2500\u2500 maps\n|   \u2514\u2500 example2.json\n\u251c\u2500\u2500 depot\n|   \u2514\u2500 textures\n|       \u2514\u2500 models\n|           \u2514\u2500 my_texture.dds\n\u2514\u2500\u2500 output\n    \u251c\u2500 example2.starpak\n    \u2514\u2500 example2.rpak\n")),(0,i.yg)("p",null,":::: note\n::: title\nNote\n:::"),(0,i.yg)("p",null,"This example map file creates an RPak named ",(0,i.yg)("inlineCode",{parentName:"p"},"example2.rpak")," which\ncontains 1 texture asset. This texture will have it\\'s higher resolution\nmip levels stored in example2.starpak\n::::"),(0,i.yg)("p",null,":::: note\n::: title\nNote\n:::"),(0,i.yg)("p",null,"The texture will replace any vanilla textures that have the same path. (\n",(0,i.yg)("inlineCode",{parentName:"p"},"textures/models/my_texture")," )"),(0,i.yg)("p",null,"This is useful for creating basic skins and camos.\n::::"),(0,i.yg)("h3",{id:"3-multiple-textures--multiple-starpaks"},"3. Multiple Textures + Multiple Starpaks"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"example3.json")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "example3",\n    "assetsDir": "../depot",\n    "outputDir": "../output",\n    "version": 7,\n    "starpakPath": "example3.starpak",\n    "files":\n    [\n        {\n            "$type": "txtr",\n            "path": "textures/models/my_texture_col"\n        },\n        {\n            "$type": "txtr",\n            "path": "textures/models/my_texture_nml"\n        },\n        {\n            "$type": "txtr",\n            "starpakPath": "example3-spc.starpak",\n            "path": "textures/models/my_texture_spc"\n        }\n    ]\n}\n')),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-text"},"root\n\u251c\u2500\u2500 RePak.exe\n\u251c\u2500\u2500 maps\n|   \u2514\u2500 example3.json\n\u251c\u2500\u2500 depot\n|   \u2514\u2500 textures\n|       \u2514\u2500 models\n|           \u251c\u2500 my_texture_col.dds\n|           \u251c\u2500 my_texture_nml.dds\n|           \u2514\u2500 my_texture_spc.dds\n\u2514\u2500\u2500 output\n    \u251c\u2500 example3.starpak\n    \u251c\u2500 example3-spc.starpak\n    \u2514\u2500 example3.rpak\n")),(0,i.yg)("p",null,":::: note\n::: title\nNote\n:::"),(0,i.yg)("p",null,"This example map file creates an RPak named ",(0,i.yg)("inlineCode",{parentName:"p"},"example3.rpak")," which\ncontains 3 texture assets. These textures each have their higher\nresolution mip levels stored in starpaks."),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"my_texture_col")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"mp_texture_nml")," use ",(0,i.yg)("inlineCode",{parentName:"p"},"example3.starpak"),", as they do\nnot specify their own ",(0,i.yg)("inlineCode",{parentName:"p"},"starpakPath"),". This makes them use the default\n",(0,i.yg)("inlineCode",{parentName:"p"},"starpakPath")," that is defined at the file scope, instead of in the\nindividual textures."),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"my_texture_spc")," uses ",(0,i.yg)("inlineCode",{parentName:"p"},"example3-spc.starpak"),", as it specifies it\\'s own\n",(0,i.yg)("inlineCode",{parentName:"p"},"starpakPath"),".\n::::"),(0,i.yg)("p",null,":::: note\n::: title\nNote\n:::"),(0,i.yg)("p",null,"This RPak is a good example of a skin that would normally require the\nskin tool to install. The advantage of this method is that the skin can\nbe uninstalled or temporarily disabled when packed as a mod.\n::::"),(0,i.yg)("h2",{id:"structure"},"Structure:"),(0,i.yg)("h3",{id:"name"},(0,i.yg)("inlineCode",{parentName:"h3"},"name")),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"name")," field of a map file determines the name of the resulting\nRPak."),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"name")," is appended with ",(0,i.yg)("inlineCode",{parentName:"p"},".rpak")," and defaults to ",(0,i.yg)("inlineCode",{parentName:"p"},"new")," if no ",(0,i.yg)("inlineCode",{parentName:"p"},"name"),"\nis provided. This results in a default RPak called ",(0,i.yg)("inlineCode",{parentName:"p"},"new.rpak"),"."),(0,i.yg)("p",null,":::: warning\n::: title\nWarning\n:::"),(0,i.yg)("p",null,"In the event that no ",(0,i.yg)("inlineCode",{parentName:"p"},"name")," is provided in the map file, RePak will\noutput the following warning to the console:"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"Map file should have a 'name' field containing the string name for the new rpak, but none was provided. Defaulting to 'new.rpak' and continuing...\\n"),"\n::::"),(0,i.yg)("h3",{id:"assetsdir"},(0,i.yg)("inlineCode",{parentName:"h3"},"assetsDir")),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"assetsDir")," field of a map file determines the root path which the\nprogram combines with the ",(0,i.yg)("inlineCode",{parentName:"p"},"path")," for assets in order to find the correct\nfile. This path may be a relative path, or an absolute path."),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"assetsDir")," provided in the map file is appended with a slash ( ",(0,i.yg)("inlineCode",{parentName:"p"},"\\"),"\n) if necessary"),(0,i.yg)("p",null,":::: warning\n::: title\nWarning\n:::"),(0,i.yg)("p",null,"If no ",(0,i.yg)("inlineCode",{parentName:"p"},"assetsDir")," is provided, it defaults to the working directory (\n",(0,i.yg)("inlineCode",{parentName:"p"},".\\")," ) as well as outputting the following warning to the console:"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"No assetsDir field provided. Assuming that everything is relative to the working directory.\\n"),"\n::::"),(0,i.yg)("h3",{id:"outputdir"},(0,i.yg)("inlineCode",{parentName:"h3"},"outputDir")),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"outputDir")," field of a map file determines the folder that the\nprogram will write the RPak and StaRPak files to once they have been\ncreated. This path may be a relative path, or an absolute path."),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"outputDir")," provided in the map file is appended with a slash ( ",(0,i.yg)("inlineCode",{parentName:"p"},"\\"),"\n) if necessary"),(0,i.yg)("p",null,"If no ",(0,i.yg)("inlineCode",{parentName:"p"},"outputDir")," is provided in the map file, RePak defaults to\n",(0,i.yg)("inlineCode",{parentName:"p"},".\\build\\")),(0,i.yg)("h3",{id:"version"},(0,i.yg)("inlineCode",{parentName:"h3"},"version")),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"version")," field of a map file determines the RPak version that RePak\nwill create."),(0,i.yg)("p",null,":::: error\n::: title\nError\n:::"),(0,i.yg)("p",null,"If no ",(0,i.yg)("inlineCode",{parentName:"p"},"version")," field is provided, RePak will output the following error\nand the program will stop:"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"Map file doesn't specify an RPak version\\nUse 'version: 7' for Titanfall 2 or 'version: 8' for Apex\\n"),"\n::::"),(0,i.yg)("p",null,":::: error\n::: title\nError\n:::"),(0,i.yg)("p",null,"If an invalid ",(0,i.yg)("inlineCode",{parentName:"p"},"version")," field is provided, RePak will output the\nfollowing error and the program will stop:"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"Invalid RPak version specified\\nUse 'version: 7' for Titanfall 2 or 'version: 8' for Apex\\n"),"\n::::"),(0,i.yg)("h4",{id:"list-of-known-version-values"},"List of known ",(0,i.yg)("inlineCode",{parentName:"h4"},"version")," values:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"6"),": Titanfall 2: Tech Test ",(0,i.yg)("strong",{parentName:"li"},"[","UNSUPPORTED","]")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"7"),": Titanfall 2"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"8"),": Apex Legends")),(0,i.yg)("h3",{id:"starpakpath"},(0,i.yg)("inlineCode",{parentName:"h3"},"starpakPath")),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"starpakPath")," field of a map file determines the default starpak\npath for textures (and other streamed assets) to use."),(0,i.yg)("p",null,":::: note\n::: title\nNote\n:::"),(0,i.yg)("p",null,"If the starpak name ends in ",(0,i.yg)("inlineCode",{parentName:"p"},"_hotswap.starpak")," (e.g.\n",(0,i.yg)("inlineCode",{parentName:"p"},"my_thing_hotswap.starpak"),") then Titanfall 2 will view it as optional.\nThis allows the starpak to be moved, removed, or replaced while the game\nis running and streaming the texture. This can be useful for debugging.\n::::"),(0,i.yg)("p",null,":::: note\n::: title\nNote\n:::"),(0,i.yg)("p",null,"RePak will not throw any errors if no ",(0,i.yg)("inlineCode",{parentName:"p"},"starpakPath")," field is specified,\nhowever the individual textures may throw errors if they do not have a\n",(0,i.yg)("inlineCode",{parentName:"p"},"starpakPath")," specified\n::::"),(0,i.yg)("h3",{id:"files"},(0,i.yg)("inlineCode",{parentName:"h3"},"files")),(0,i.yg)("p",null,"The ",(0,i.yg)("inlineCode",{parentName:"p"},"files")," field of a map file is an array of JSON objects, each one\nrepresenting an RPak asset."),(0,i.yg)("p",null,"RePak will not throw any errors if no ",(0,i.yg)("inlineCode",{parentName:"p"},"files")," field is specified,\nhowever the resulting RPak will contain no assets, rendering it useless."))}u.isMDXComponent=!0}}]);