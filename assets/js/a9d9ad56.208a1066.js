"use strict";(self.webpackChunkns_wiki=self.webpackChunkns_wiki||[]).push([[3230],{5680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>d});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(a),y=r,d=m["".concat(s,".").concat(y)]||m[y]||g[y]||o;return a?n.createElement(d,l(l({ref:t},c),{},{components:a})):n.createElement(d,l({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=y;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}y.displayName="MDXCreateElement"},8306:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=a(8168),r=(a(6540),a(5680));const o={},l="Chathooks",i={unversionedId:"reference/northstar/chathooks",id:"reference/northstar/chathooks",isDocsHomePage:!1,title:"Chathooks",description:"This document provides usage of the Chathook API added in Northstar",source:"@site/docs/reference/northstar/chathooks.md",sourceDirName:"reference/northstar",slug:"/reference/northstar/chathooks",permalink:"/ns-wiki/docs/reference/northstar/chathooks",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/reference/northstar/chathooks.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Custom Northstar Callbacks",permalink:"/ns-wiki/docs/reference/northstar/callbacks"},next:{title:"Custom Damage Source IDs",permalink:"/ns-wiki/docs/reference/northstar/customdamagesources"}},s=[{value:"Client chat API",id:"client-chat-api",children:[{value:"Callbacks",id:"callbacks",children:[]},{value:"Writing to Chat",id:"writing-to-chat",children:[]}]},{value:"Server Chat API",id:"server-chat-api",children:[{value:"Callbacks",id:"callbacks-1",children:[]},{value:"Custom Messages",id:"custom-messages",children:[]}]},{value:"ANSI Escape Codes",id:"ansi_escape",children:[]}],p={toc:s},c="wrapper";function m(e){let{components:t,...a}=e;return(0,r.yg)(c,(0,n.A)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"chathooks"},"Chathooks"),(0,r.yg)("p",null,"This document provides usage of the Chathook API added in Northstar\n",(0,r.yg)("inlineCode",{parentName:"p"},"v1.6.0"),". For an example of chathooks in use, check out EmmaM\\'s\n",(0,r.yg)("a",{parentName:"p",href:"https://github.com/emma-miler/OwOfier/"},"OwOfier mod"),"."),(0,r.yg)("p",null,":::: warning\n::: title\nWarning\n:::"),(0,r.yg)("p",null,"Your mod needs to be load priority 1 or above to use the structs and\ncallbacks in your script.\n::::"),(0,r.yg)("h2",{id:"client-chat-api"},"Client chat API"),(0,r.yg)("h3",{id:"callbacks"},"Callbacks"),(0,r.yg)("p",null,"The client chat callbacks allow you to intercept chat messages and\nmodify or block them."),(0,r.yg)("p",null,"::: {#clclient_messagestruct}\n:::"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Contains details on a chat message to be displayed. You can receive\none of these by adding a chat callback with\n",(0,r.yg)("inlineCode",{parentName:"p"},"AddCallback_OnReceivedSayTextMessage <addcallback_onreceivedsaytextmessage>"),'{.interpreted-text\nrole="ref"}.'),(0,r.yg)("blockquote",{parentName:"blockquote"},(0,r.yg)("p",{parentName:"blockquote"},"the text sent by the player.")),(0,r.yg)("blockquote",{parentName:"blockquote"},(0,r.yg)("p",{parentName:"blockquote"},"the player who sent the chat.")),(0,r.yg)("blockquote",{parentName:"blockquote"},(0,r.yg)("p",{parentName:"blockquote"},"the display name of the player who sent the chat.")),(0,r.yg)("blockquote",{parentName:"blockquote"},(0,r.yg)("p",{parentName:"blockquote"},"whether this chat has a ",(0,r.yg)("inlineCode",{parentName:"p"},"[TEAM]")," tag.")),(0,r.yg)("blockquote",{parentName:"blockquote"},(0,r.yg)("p",{parentName:"blockquote"},"whether this chat has a ",(0,r.yg)("inlineCode",{parentName:"p"},"[DEAD]")," tag.")),(0,r.yg)("blockquote",{parentName:"blockquote"},(0,r.yg)("p",{parentName:"blockquote"},"whether this chat has a ",(0,r.yg)("inlineCode",{parentName:"p"},"[WHISPER]")," tag.")),(0,r.yg)("blockquote",{parentName:"blockquote"},(0,r.yg)("p",{parentName:"blockquote"},"if true, this chat will not be displayed."))),(0,r.yg)("p",null,"::: {#addcallback_onreceivedsaytextmessage}\n:::"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Adds a callback that will be run when a chat message is received from\nthe server. This will only be triggered for messages from players, not\nserver messages."),(0,r.yg)("p",{parentName:"blockquote"},"The provided function should accept a\n",(0,r.yg)("inlineCode",{parentName:"p"},"ClClient_MessageStruct <clclient_messagestruct>"),'{.interpreted-text\nrole="ref"} and return an optionally modified copy of it. When a chat\nmessage is received, each registered callback is run in sequence to\nmodify or block the message.'),(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",{parentName:"blockquote"},(0,r.yg)("code",{parentName:"pre"},'ClClient_MessageStruct function MyChatFilter(ClClient_MessageStruct message)\n{\n    if (message.message.find("nft") != null)\n    {\n        message.shouldBlock = true\n    }\n\n    message.message = StringReplace(message.message, "yes", "no", true, true)\n\n    return message\n}\n\nvoid function MyModInit()\n{\n    AddCallback_OnReceivedSayTextMessage(MyChatFilter)\n}\n'))),(0,r.yg)("h3",{id:"writing-to-chat"},"Writing to Chat"),(0,r.yg)("p",null,"A handful of functions are provided to write messages in local chat\nwindows. These do not send messages to other players, they only display\nthem locally."),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Writes a line of text in local game chat panels. Supports\n",(0,r.yg)("inlineCode",{parentName:"p"},"ANSI escape codes <ansi_escape>"),'{.interpreted-text role="ref"}.'),(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",{parentName:"blockquote"},(0,r.yg)("code",{parentName:"pre"},'void function OnGameStarted()\n{\n    Chat_GameWriteLine("You got this, " + GetLocalClientPlayer().GetPlayerName() + "!")\n}\n'))),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Appends text to local game chat panels. Supports\n",(0,r.yg)("inlineCode",{parentName:"p"},"ANSI escape codes <ansi_escape>"),'{.interpreted-text role="ref"}.'),(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",{parentName:"blockquote"},(0,r.yg)("code",{parentName:"pre"},'void function InitialiseHEVSuit()\n{\n    Chat_GameWriteLine("SENSOR ARRAYS-")\n    ActivateSensorArrays()\n    Chat_GameWrite("ACTIVATED")\n    wait 1\n    Chat_GameWriteLine("BIOMETRIC MONITORING SYSTEMS-")\n    ActivateBiometricMonitoringSystems()\n    Chat_GameWrite("ACTIVATED")\n    wait 1\n    Chat_GameWriteLine("HAVE A VERY SAFE DAY.")\n}\n'))),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Writes a line of text in local network chat panels. Supports\n",(0,r.yg)("inlineCode",{parentName:"p"},"ANSI escape codes <ansi_escape>"),'{.interpreted-text role="ref"}.'),(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",{parentName:"blockquote"},(0,r.yg)("code",{parentName:"pre"},'void function MyModInit()\n{\n    Chat_NetworkWriteLine("MyMod v1.0.0 is good to go!")\n}\n'))),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Appends text to local network chat panels. Supports\n",(0,r.yg)("inlineCode",{parentName:"p"},"ANSI escape codes <ansi_escape>"),'{.interpreted-text role="ref"}.'),(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",{parentName:"blockquote"},(0,r.yg)("code",{parentName:"pre"},'void function OnButtonPressed()\n{\n    Chat_NetworkWrite("Connecting in 3...")\n    wait 1\n    Chat_NetworkWrite("2...")\n    wait 1\n    Chat_NetworkWrite("1...")\n    wait 1\n    Chat_NetworkWrite("0")\n    Connect()\n}\n'))),(0,r.yg)("h2",{id:"server-chat-api"},"Server Chat API"),(0,r.yg)("h3",{id:"callbacks-1"},"Callbacks"),(0,r.yg)("p",null,"The server chat callbacks allow you to intercept incoming chat messages\nand modify or block them."),(0,r.yg)("p",null,"::: {#clserver_messagestruct}\n:::"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Contains details on an incoming chat message. You can receive one of\nthese by adding a chat callback with\n",(0,r.yg)("inlineCode",{parentName:"p"},"AddCallback_OnReceivedSayTextMessage <addcallback_onreceivedsaytextmessage_server>"),'{.interpreted-text\nrole="ref"}.'),(0,r.yg)("blockquote",{parentName:"blockquote"},(0,r.yg)("p",{parentName:"blockquote"},"the text sent by the player.")),(0,r.yg)("blockquote",{parentName:"blockquote"},(0,r.yg)("p",{parentName:"blockquote"},"the player who sent the chat.")),(0,r.yg)("blockquote",{parentName:"blockquote"},(0,r.yg)("p",{parentName:"blockquote"},"whether this chat is only sent to the player\\'s team.")),(0,r.yg)("blockquote",{parentName:"blockquote"},(0,r.yg)("p",{parentName:"blockquote"},"if true, this chat will not be sent."))),(0,r.yg)("p",null,"::: {#addcallback_onreceivedsaytextmessage_server}\n:::"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Adds a callback that will be run when a chat message is received from\na player. This will not be fired for custom messages sent by server\nmods."),(0,r.yg)("p",{parentName:"blockquote"},"The provided function should accept a\n",(0,r.yg)("inlineCode",{parentName:"p"},"ClServer_MessageStruct <clserver_messagestruct>"),'{.interpreted-text\nrole="ref"} and return an optionally modified copy of it. When a chat\nmessage is received, each registered callback is run in sequence to\nmodify or block the message.'),(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",{parentName:"blockquote"},(0,r.yg)("code",{parentName:"pre"},'ClServer_MessageStruct function MyChatFilter(ClServer_MessageStruct message)\n{\n    if (message.message.find("nft") != null)\n    {\n        message.shouldBlock = true\n    }\n\n    message.message = StringReplace(message.message, "yes", "no", true, true)\n\n    return message\n}\nvoid function MyModInit()\n{\n    AddCallback_OnReceivedSayTextMessage(MyChatFilter)\n}\n'))),(0,r.yg)("h3",{id:"custom-messages"},"Custom Messages"),(0,r.yg)("p",null,"With custom messages you can send chat messages at any time, to all\nplayers or to specific players."),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Displays a chat message as if the player sent it. Only use this when\nthe player has performed a clear action to send a chat message."),(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Parameters:")),(0,r.yg)("ul",{parentName:"blockquote"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"entity player")," - the player that the chat message will appear to\nbe from."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"string text")," - the contents of the chat message. Supports\n",(0,r.yg)("inlineCode",{parentName:"li"},"ANSI escape codes <ansi_escape>"),'{.interpreted-text role="ref"}\nfor colors.'),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"bool isTeamChat")," - whether this chat is only sent to the\nplayer\\'s team.")),(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",{parentName:"blockquote"},(0,r.yg)("code",{parentName:"pre"},'void function OnSayRedCommand(entity player, string text)\n{\n    Chat_Impersonate(player, "red text -> \\x1b[31m" + text)\n}\n'))),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Sends a private chat message from a player that is only displayed to\none other player. Only use this when the player has performed a clear\naction to send a chat message."),(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Parameters:")),(0,r.yg)("ul",{parentName:"blockquote"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"entity fromPlayer")," - the player the message will be from."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"entity toPlayer")," - the player that the message will be shown to."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"string text")," - the contents of the chat message. Supports\n",(0,r.yg)("inlineCode",{parentName:"li"},"ANSI escape codes <ansi_escape>"),'{.interpreted-text role="ref"}\nfor colors.'),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"bool whisper")," - if true, ",(0,r.yg)("inlineCode",{parentName:"li"},"[WHISPER]")," will be displayed before the\nmessage to indicate the message is private.")),(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",{parentName:"blockquote"},(0,r.yg)("code",{parentName:"pre"},"void function OnSendToFriendsCommand(entity fromPlayer, string text)\n{\n    array<entity> friends = GetPlayerFriends(fromPlayer)\n    foreach (friend in friends)\n    {\n        Chat_PrivateMessage(fromPlayer, friend, text, true)\n    }\n}\n"))),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Displays a server message to all players in the chat."),(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Parameters:")),(0,r.yg)("ul",{parentName:"blockquote"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"string text")," - the contents of the chat message. Supports\n",(0,r.yg)("inlineCode",{parentName:"li"},"ANSI escape codes <ansi_escape>"),'{.interpreted-text role="ref"}\nfor colors.'),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"bool withServerTag")," - if true, ",(0,r.yg)("inlineCode",{parentName:"li"},"[SERVER]")," will appear before the\nmessage in chat. Defaults to true.")),(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",{parentName:"blockquote"},(0,r.yg)("code",{parentName:"pre"},'void function RestartServerThread()\n{\n    // wait one hour\n    wait 3600\n    Chat_ServerBroadcast("Server will be shut down in \\x1b[93m5 seconds")\n    wait 1\n    Chat_ServerBroadcast("Server will be shut down in \\x1b[93m4 seconds")\n    wait 1\n    Chat_ServerBroadcast("Server will be shut down in \\x1b[93m3 seconds")\n    wait 1\n    Chat_ServerBroadcast("Server will be shut down in \\x1b[93m2 seconds")\n    wait 1\n    Chat_ServerBroadcast("Server will be shut down in \\x1b[93m1 second")\n    wait 1\n    StopServer()\n}\n'))),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Sends a server message to a specific player in the chat."),(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Parameters:")),(0,r.yg)("ul",{parentName:"blockquote"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"entity toPlayer")," - the player that the message will be shown to."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"string text")," - the contents of the chat message. Supports\n",(0,r.yg)("inlineCode",{parentName:"li"},"ANSI escape codes <ansi_escape>"),'{.interpreted-text role="ref"}\nfor colors.'),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"bool whisper")," - if true, ",(0,r.yg)("inlineCode",{parentName:"li"},"[WHISPER]")," will be displayed before the\nmessage to indicate the message is private."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"bool withServerTag")," - if true, ",(0,r.yg)("inlineCode",{parentName:"li"},"[SERVER]")," will appear before the\nmessage in chat. Defaults to true.")),(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Example:")),(0,r.yg)("pre",{parentName:"blockquote"},(0,r.yg)("code",{parentName:"pre"},'void function OnBanCommand(entity player, array<string> args)\n{\n    if (!PlayerIsModerator(player))\n    {\n        Chat_ServerPrivateMessage(player, "You do not have the permissions to perform this command.", true, false)\n        return\n    }\n\n    BanPlayerByName(args[0])\n}\n'))),(0,r.yg)("h2",{id:"ansi_escape"},"ANSI Escape Codes"),(0,r.yg)("p",null,"All messages support ANSI escape codes for customising text color. These\nare commands in strings that have special meaning. For example, the\nstring:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-text"},"Hello world, \\x1b[31mthis text is red\\x1b[0m. And \\x1b[34mthis text is blue\\x1b[0m.\n")),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"\\x1b")," is a special character that Squirrel (and other languages)\nreplace with a reserved ASCII character. For future reference this will\nbe referred to with ",(0,r.yg)("inlineCode",{parentName:"p"},"ESC")," (e.g. setting red text is ",(0,r.yg)("inlineCode",{parentName:"p"},"ESC[31m"),")."),(0,r.yg)("p",null,"The following commands are available:"),(0,r.yg)("hr",null),(0,r.yg)("p",null,"  Codes                        Description\n",(0,r.yg)("inlineCode",{parentName:"p"},"ESC[0m")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"ESC[39m"),"       Reset text formatting.\n",(0,r.yg)("inlineCode",{parentName:"p"},"ESC[30-37m"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"ESC[90-97m"),"   Set to one of ",(0,r.yg)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/ANSI_escape_code#3-bit_and_4-bit"},"the available color presets"),".\n",(0,r.yg)("inlineCode",{parentName:"p"},"ESC[38;5;Xm"),"                Set to one of ",(0,r.yg)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit"},"the available 8-bit colors"),".\n",(0,r.yg)("inlineCode",{parentName:"p"},"ESC[38;2;R;G;Bm"),"            Set to an RGB color, with ",(0,r.yg)("inlineCode",{parentName:"p"},"R"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"G")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"B")," in the range 0-255.\n",(0,r.yg)("inlineCode",{parentName:"p"},"ESC[110m"),"                   Set to chat text color.\n",(0,r.yg)("inlineCode",{parentName:"p"},"ESC[111m"),"                   Set to friendly player name color.\n",(0,r.yg)("inlineCode",{parentName:"p"},"ESC[112m"),"                   Set to enemy player name color.\n",(0,r.yg)("inlineCode",{parentName:"p"},"ESC[113m"),"                   Set to network name color."),(0,r.yg)("hr",null),(0,r.yg)("p",null,"  : ANSI Codes"))}m.isMDXComponent=!0}}]);