"use strict";(self.webpackChunkns_wiki=self.webpackChunkns_wiki||[]).push([[8827],{2529:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>l});var r=s(4848),i=s(8453);const t={},c="Dependency Constants and Compiler Directives",d={id:"reference/northstar/dependencyconstants",title:"Dependency Constants and Compiler Directives",description:"Compiler Directives",source:"@site/docs/reference/northstar/dependencyconstants.md",sourceDirName:"reference/northstar",slug:"/reference/northstar/dependencyconstants",permalink:"/ns-wiki/docs/reference/northstar/dependencyconstants",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/reference/northstar/dependencyconstants.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Custom Damage Source IDs",permalink:"/ns-wiki/docs/reference/northstar/customdamagesources"},next:{title:"HTTP and JSON",permalink:"/ns-wiki/docs/reference/northstar/httprequests"}},o={},l=[{value:"Compiler Directives",id:"compiler-directives",level:2},{value:"Dependency Constants",id:"dependency-constants",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"dependency-constants-and-compiler-directives",children:"Dependency Constants and Compiler Directives"})}),"\n",(0,r.jsx)(n.h2,{id:"compiler-directives",children:"Compiler Directives"}),"\n",(0,r.jsxs)(n.p,{children:["Compiler directives are a way to compile code only if a specific\r\ncondition is met. To use this you have the ",(0,r.jsx)(n.code,{children:"#if"}),", ",(0,r.jsx)(n.code,{children:"#endif"}),", ",(0,r.jsx)(n.code,{children:"#else"})," and\r\n",(0,r.jsx)(n.code,{children:"#elseif"})," keyword."]}),"\n",(0,r.jsx)(n.p,{children:"Contditons you can check for are"}),"\n",(0,r.jsxs)(n.p,{children:[":   -   ",(0,r.jsx)(n.code,{children:"SERVER"})," Checks if the code is compiled on the server VM."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"CLIENT"})," Checks if the code is compiled on the client VM."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"UI"})," Checks if the code is compiled on the UI VM."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MP"})," Checks if the code is compiled in a multiplayer match."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SP"})," Checks if the code is compiled in a singeplayer match."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DEV"})," Checks if the code is compiled with the ",(0,r.jsx)(n.code,{children:"-dev"})," keyword in\r\nthe startup arguments."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"These conditions can also be combined with the regular squirrel boolean\r\nexpressions"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'#if SERVER\r\nChat_ServerBroadcast("Message from the server VM")\r\n#endif\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"#if (CLIENT && MP) || DEV\r\n...\r\n#elseif SP\r\n...\r\n#endif\n"})}),"\n",(0,r.jsx)(n.h2,{id:"dependency-constants",children:"Dependency Constants"}),"\n",(0,r.jsx)(n.p,{children:"Dependency constants are used to only compile code if a dependency your\r\nmod requires is loaded, these use the Compiler directives syntax."}),"\n",(0,r.jsxs)(n.p,{children:["Inside your ",(0,r.jsx)(n.code,{children:"mod.json"})," define a constant as:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{\r\n    // mod.json stuff\r\n    "Dependencies": {\r\n        // sets the constant to 0 or 1, depending if the mod with the name "Mod Name" exists and is enabled\r\n        "CONSTANT_NAME": "Mod Name"\r\n    }\r\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"For Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'"PLAYER_HAS_ROGUELIKE_MOD": "TF|Roguelike"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Will define a constant ",(0,r.jsx)(n.code,{children:"PLAYER_HAS_ROGUELIKE_MOD"})," that is set to ",(0,r.jsx)(n.code,{children:"0"})," or\r\n",(0,r.jsx)(n.code,{children:"1"})," depending if the mod is enabled. It then can be used as a\r\nconstant/compiler flag."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'#if PLAYER_HAS_ROGUELIKE_MOD\r\nprint("player has roguelike mod")\r\nRoguelike_Function();\r\n#else\r\nprint("Can\'t use the function because the mod is off :\'(")\r\n#endif\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>d});var r=s(6540);const i={},t=r.createContext(i);function c(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);