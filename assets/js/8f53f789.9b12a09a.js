"use strict";(self.webpackChunkns_wiki=self.webpackChunkns_wiki||[]).push([[7201],{5680:(e,r,t)=>{t.d(r,{xA:()=>p,yg:()=>y});var n=t(6540);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),c=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=c(e.components);return n.createElement(l.Provider,{value:r},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},v=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(t),v=o,y=m["".concat(l,".").concat(v)]||m[v]||u[v]||a;return t?n.createElement(y,i(i({ref:r},p),{},{components:t})):n.createElement(y,i({ref:r},p))}));function y(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=v;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}v.displayName="MDXCreateElement"},2521:(e,r,t)=>{t.r(r),t.d(r,{contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=t(8168),o=(t(6540),t(5680));const a={},i="Movers",s={unversionedId:"source/reference/respawn/movers",id:"source/reference/respawn/movers",isDocsHomePage:!1,title:"Movers",description:"Movers are entites that move and rotate smoothly. script_mover allows",source:"@site/docs/source/reference/respawn/movers.md",sourceDirName:"source/reference/respawn",slug:"/source/reference/respawn/movers",permalink:"/ns-wiki/docs/source/reference/respawn/movers",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/source/reference/respawn/movers.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"HUD elements in Scripts",permalink:"/ns-wiki/docs/source/reference/respawn/hud_script"},next:{title:"Code Callbacks",permalink:"/ns-wiki/docs/source/reference/respawn/native_server/codecallback"}},l=[{value:"Create a Mover",id:"create-a-mover",children:[]},{value:"Moving",id:"moving",children:[]},{value:"Behaviour",id:"behaviour",children:[]},{value:"Examples",id:"examples",children:[]}],c={toc:l},p="wrapper";function m(e){let{components:r,...t}=e;return(0,o.yg)(p,(0,n.A)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"movers"},"Movers"),(0,o.yg)("p",null,"Movers are entites that move and rotate smoothly. ",(0,o.yg)("inlineCode",{parentName:"p"},"script_mover")," allows\nfor smooth movement and rotation contrary to ",(0,o.yg)("inlineCode",{parentName:"p"},"script_mover_lightweight"),"\nwhich is not able to rotate."),(0,o.yg)("h2",{id:"create-a-mover"},"Create a Mover"),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"returns ",(0,o.yg)("inlineCode",{parentName:"p"},"script_mover"))),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"returns ",(0,o.yg)("inlineCode",{parentName:"p"},"script_mover")," which has a model")),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"returns ",(0,o.yg)("inlineCode",{parentName:"p"},"script_mover_lightweight"))),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"returns ",(0,o.yg)("inlineCode",{parentName:"p"},"script_mover_lightweight")," which has a model")),(0,o.yg)("h2",{id:"moving"},"Moving"),(0,o.yg)("blockquote",null,(0,o.yg)("blockquote",{parentName:"blockquote"},(0,o.yg)("p",{parentName:"blockquote"},"Only usable by expensive movers")),(0,o.yg)("blockquote",{parentName:"blockquote"},(0,o.yg)("p",{parentName:"blockquote"},"Only usable by expensive movers")),(0,o.yg)("blockquote",{parentName:"blockquote"},(0,o.yg)("p",{parentName:"blockquote"},"Immediately stop this mover from moving"))),(0,o.yg)("h2",{id:"behaviour"},"Behaviour"),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"Pushers move everything that stands on top of them or next to them and\ncan also kill entities by crushing them.")),(0,o.yg)("h2",{id:"examples"},"Examples"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"entity mover = CreateScriptMover( <0,0,0> ) \n\n// moving the mover to <0,0,10> in 1 second\nmover.NonPhysicsMoveTo( <0,0,10>, 1, 0, 0 )\n\n// wating so the mover gets to the destination\nwait 1\n\n// sending it back\nmover.NonPhysicsMoveTo( <0,0,0>, 1, 0, 0 )\n\n// then stoping the mover in 0.5 seconds\nwait 0.5\nmover.NonPhysicsStop()\n")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},'// creating a elevator \n// using a mover with a model\nentity mover = CreateScriptMoverModel( $"models/props/turret_base/turret_base.mdl", < -40.5605, -1827.87, -223.944 >, <0,0,0>, SOLID_VPHYSICS, 1000 )\nmover.SetPusher( true ) // making it into a pusher\n\n// for loop to move the elevator up and down\nfor(;;)\n{\n    mover.NonPhysicsMoveTo( < -35.4312, -1827.87, 523.046 >, 4.8, 0.1, 0.1 )\n    wait 6\n\n    mover.NonPhysicsMoveTo( < -35.4312, -1827.87, -223.944 >, 4.8, 0.1, 0.1 )\n    wait 6\n}\n')),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"// Phase shifting the player to a destination\n// setting a position\nvector destination = <250,1000,100>\n// checking if the player is valid\nif ( IsValid( player ) )\n{\n    // creating the mover\n    entity mover = CreateOwnedScriptMover( player )\n    player.SetParent( mover ) // parenting the player ( so they move with the mover )\n    mover.NonPhysicsMoveTo( destination, 0.5, 0, 0 ) // saying to the moveer to move\n    vector angles = player.GetAngles() // angles saved\n    PhaseShift( player, 0.1, 1 ) // phase shifitng the player\n    player.SetAngles( angles ) // setting the player to the original angles\n}\nwait 0.6 // wating so the mover moves\n\nif ( IsValid( player ) )\n{\n    player.ClearParent() // removing the player from the mover\n}\n")))}m.isMDXComponent=!0}}]);