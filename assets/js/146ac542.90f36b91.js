"use strict";(self.webpackChunkns_wiki=self.webpackChunkns_wiki||[]).push([[3101],{286:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var s=i(4848),t=i(8453);const r={},o="Useful Functions",l={id:"reference/northstar/usefulfuncs",title:"Useful Functions",description:"Custom Ejection Messages",source:"@site/docs/reference/northstar/usefulfuncs.md",sourceDirName:"reference/northstar",slug:"/reference/northstar/usefulfuncs",permalink:"/ns-wiki/docs/reference/northstar/usefulfuncs",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/reference/northstar/usefulfuncs.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Serverside RUI",permalink:"/ns-wiki/docs/reference/northstar/serversiderui"},next:{title:"Callbacks",permalink:"/ns-wiki/docs/reference/respawn/callbacks"}},d={},c=[{value:"Custom Ejection Messages",id:"custom-ejection-messages",level:2},{value:"How ejection messages are chosen",id:"how-ejection-messages-are-chosen",level:3},{value:"Adding new messages",id:"adding-new-messages",level:3},{value:"Localisation",id:"localisation",level:3},{value:"Player functions",id:"player-functions",level:2},{value:"Check for different weapon types on a player",id:"check-for-different-weapon-types-on-a-player",level:3},{value:"Get weapon from entity",id:"get-weapon-from-entity",level:3},{value:"Change a players invincibility",id:"change-a-players-invincibility",level:3},{value:"Entity functions",id:"entity-functions",level:2},{value:"Turret functions",id:"turret-functions",level:3},{value:"Rest so far to be sorted",id:"rest-so-far-to-be-sorted",level:3},{value:"Titans",id:"titans",level:3},{value:"Gamemode functions",id:"gamemode-functions",level:2},{value:"Threaded conditonals",id:"threaded-conditonals",level:2},{value:"Random functions",id:"random-functions",level:2},{value:"Type Utilities",id:"type-utilities",level:2},{value:"Table",id:"table",level:3},{value:"Arrays",id:"arrays",level:3},{value:"String",id:"string",level:3},{value:"Float",id:"float",level:3},{value:"Integer",id:"integer",level:3},{value:"Vectors",id:"vectors",level:3}];function a(e){const n={admonition:"admonition",blockquote:"blockquote",code:"code",div:"div",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"useful-functions",children:"Useful Functions"})}),"\n",(0,s.jsx)(n.h2,{id:"custom-ejection-messages",children:"Custom Ejection Messages"}),"\n",(0,s.jsx)(n.h3,{id:"how-ejection-messages-are-chosen",children:"How ejection messages are chosen"}),"\n",(0,s.jsx)(n.p,{children:"When ejecting the game selects a random number between 0 and 1, if this\r\nnumber is greater than 0.15 then a random common eject message is\r\nreturned, if it is less than 0.15 then a rare ejection message is\r\nreturned."}),"\n",(0,s.jsx)(n.h3,{id:"adding-new-messages",children:"Adding new messages"}),"\n",(0,s.jsxs)(n.p,{children:["Using ",(0,s.jsx)(n.code,{children:"AddCommonEjectMessage( String message )"})," and\r\n",(0,s.jsx)(n.code,{children:"AddRareEjectMessage( String message )"})," in script additional messages\r\ncan be added to the pool of potential ejection messages"]}),"\n",(0,s.jsx)(n.h3,{id:"localisation",children:"Localisation"}),"\n",(0,s.jsx)(n.p,{children:"Like most things custom ejection messages can be localised through\r\nkeyvalues"}),"\n",(0,s.jsx)(n.p,{children:"There are no functions to remove ejection messages, however existing\r\nones can be altered by modifying localisation files"}),"\n",(0,s.jsx)(n.p,{children:"Below are a list of useful functions added by Northstar."}),"\n",(0,s.jsx)(n.h2,{id:"player-functions",children:"Player functions"}),"\n",(0,s.jsx)(n.h3,{id:"check-for-different-weapon-types-on-a-player",children:"Check for different weapon types on a player"}),"\n",(0,s.jsx)(n.h3,{id:"get-weapon-from-entity",children:"Get weapon from entity"}),"\n",(0,s.jsx)(n.p,{children:"Take weapon from Entity ~~~~~~~~~~~~~~~~~~~~~~"}),"\n",(0,s.jsx)(n.p,{children:"Validity checks for player\r\n~~~~~~~~~~~~~~~~~~~~~~~~~"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.div,{children:(0,s.jsx)(n.p,{children:"Note"})}),(0,s.jsx)(n.p,{children:"Respawn comment next to the function:"}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"TODO: This is a copy of SP's PlayerPosInSolid(). Not changing it to avoid patching SP. Merge into one function next game"})})]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.div,{children:(0,s.jsx)(n.p,{children:"Note"})}),(0,s.jsx)(n.p,{children:"Respawn comment next to the function:"}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"TODO:  This function returns true for a player standing inside a friendly grunt. It also returns true if you are right up against a ceiling.Needs fixing for next game"})})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"change-a-players-invincibility",children:"Change a players invincibility"}),"\n",(0,s.jsx)(n.h2,{id:"entity-functions",children:"Entity functions"}),"\n",(0,s.jsx)(n.h3,{id:"turret-functions",children:"Turret functions"}),"\n",(0,s.jsx)(n.h3,{id:"rest-so-far-to-be-sorted",children:"Rest so far to be sorted"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.div,{children:(0,s.jsx)(n.p,{children:"Note"})}),(0,s.jsx)(n.p,{children:"this function only exists on clients"})]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.div,{children:(0,s.jsx)(n.p,{children:"Note"})}),(0,s.jsx)(n.p,{children:"A cleaner way to get a player:"})]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.div,{children:(0,s.jsx)(n.p,{children:"Note"})}),(0,s.jsx)(n.p,{children:"this function only works on NPCs and not on players"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"titans",children:"Titans"}),"\n",(0,s.jsx)(n.h2,{id:"gamemode-functions",children:"Gamemode functions"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.div,{children:(0,s.jsx)(n.p,{children:"Note"})}),(0,s.jsx)(n.p,{children:"Does not work for FFA modes"})]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Returns the local player's UID, else ",(0,s.jsx)(n.code,{children:"null"}),". Available on CLIENT, UI\r\nand SERVER VM."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"threaded-conditonals",children:"Threaded conditonals"}),"\n",(0,s.jsx)(n.h2,{id:"random-functions",children:"Random functions"}),"\n",(0,s.jsx)(n.h2,{id:"type-utilities",children:"Type Utilities"}),"\n",(0,s.jsx)(n.h3,{id:"table",children:"Table"}),"\n",(0,s.jsx)(n.h3,{id:"arrays",children:"Arrays"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.admonition,{type:"warning",children:[(0,s.jsx)(n.div,{children:(0,s.jsx)(n.p,{children:"Warning"})}),(0,s.jsxs)(n.p,{children:["this returns ",(0,s.jsx)(n.code,{children:"-1"})," if the item was not found in the array"]})]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Removes a variable by value instead of index."}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Reorders the array randomly."}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"returns a random element from array"}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"changes the size of the array to the first int, new slots will be\r\nfilled with the 2nd argument."}),"\n"]}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.div,{children:(0,s.jsx)(n.p,{children:"Note"})}),(0,s.jsx)(n.p,{children:"A few built-in functions you can give as arguments to sort an array."}),(0,s.jsxs)(n.div,{children:[(0,s.jsx)(n.p,{children:"Array Sort Functions"}),(0,s.jsx)(n.p,{children:"Functions for score comparison"})]})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.div,{children:(0,s.jsx)(n.p,{children:"Note"})}),(0,s.jsx)(n.p,{children:"Returns a section of the array as new array. Copies from start to the\r\nend (not included). If start is negative the index is calculated as\r\nlength + start, if end is negative the index is calculated as length +\r\nend. If end is omitted end is equal to the array length."})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"string",children:"String"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"returns a unique string"}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.div,{children:(0,s.jsx)(n.p,{children:"Note"})}),(0,s.jsx)(n.p,{children:"returns the new string with the first occurance of the toReplace\r\nstring."})]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Returns a formatted template"}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.admonition,{type:"warning",children:[(0,s.jsx)(n.div,{children:(0,s.jsx)(n.p,{children:"Warning"})}),(0,s.jsxs)(n.p,{children:["returns ",(0,s.jsx)(n.code,{children:"null"})," if the string is not found."]}),(0,s.jsx)(n.p,{children:"You can eliminate the possibility of the returned index being null by\r\ncasting like this:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'int ornull index = GetMapName().find( "mp" )\r\n\r\nif( !index )\r\n    return\r\nint( index )\r\nint n = index + 1 //now we do not need the ornull anymore\n'})})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"float",children:"Float"}),"\n",(0,s.jsx)(n.h3,{id:"integer",children:"Integer"}),"\n",(0,s.jsx)(n.h3,{id:"vectors",children:"Vectors"})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(6540);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);