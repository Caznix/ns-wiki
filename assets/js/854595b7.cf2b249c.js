"use strict";(self.webpackChunkns_wiki=self.webpackChunkns_wiki||[]).push([[1616],{5680:(e,n,r)=>{r.d(n,{xA:()=>g,yg:()=>d});var t=r(6540);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=t.createContext({}),p=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},g=function(e){var n=p(e.components);return t.createElement(l.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},y=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),u=p(r),y=a,d=u["".concat(l,".").concat(y)]||u[y]||c[y]||s;return r?t.createElement(d,i(i({ref:n},g),{},{components:r})):t.createElement(d,i({ref:n},g))}));function d(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=r.length,i=new Array(s);i[0]=y;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[u]="string"==typeof e?e:a,i[1]=o;for(var p=2;p<s;p++)i[p]=r[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}y.displayName="MDXCreateElement"},3940:(e,n,r)=>{r.r(n),r.d(n,{contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var t=r(8168),a=(r(6540),r(5680));const s={},i="Serverside RUI",o={unversionedId:"source/reference/northstar/serversiderui",id:"source/reference/northstar/serversiderui",isDocsHomePage:!1,title:"Serverside RUI",description:"serverside-rui-doc}",source:"@site/docs/source/reference/northstar/serversiderui.md",sourceDirName:"source/reference/northstar",slug:"/source/reference/northstar/serversiderui",permalink:"/ns-wiki/docs/source/reference/northstar/serversiderui",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/source/reference/northstar/serversiderui.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Safe I/O",permalink:"/ns-wiki/docs/source/reference/northstar/safeio"},next:{title:"Useful Functions",permalink:"/ns-wiki/docs/source/reference/northstar/usefulfuncs"}},l=[{value:"Polls",id:"polls",children:[{value:"Getting Response",id:"getting-response",children:[]}]},{value:"Large Message",id:"large-message",children:[]},{value:"Info Message",id:"info-message",children:[]},{value:"PopUp",id:"popup",children:[]},{value:"Announcement",id:"announcement",children:[]},{value:"Status",id:"status",children:[]}],p={toc:l},g="wrapper";function u(e){let{components:n,...r}=e;return(0,a.yg)(g,(0,t.A)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"serverside-rui-doc"},"Serverside RUI"),(0,a.yg)("p",null,"Server-side Rui provides a set of functions enabling servers to display\ncomplex hud elements on clients without requiring a client-side mod.\nThese functions were introduced in Northstar ",(0,a.yg)("inlineCode",{parentName:"p"},"1.10.0"),"."),(0,a.yg)("p",null,"It should be noted that there's no guarantee the client will see the hud\nelements."),(0,a.yg)("h2",{id:"polls"},"Polls"),(0,a.yg)("p",null,"Creates a poll on ",(0,a.yg)("inlineCode",{parentName:"p"},"player"),"."),(0,a.yg)("figure",{class:"screenshotalign-center"},(0,a.yg)("img",{src:"/_static/serversiderui/vote.png",class:"screenshot",alt:"/_static/serversiderui/vote.png"}),(0,a.yg)("figcaption",null,"Player POV")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Definition:")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Example:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'void function CreateDummyPoll()\n {\n    array<string> options = [ "Vote for a map!", "Amongsus", "sussy", "when", "1.10", "hi H0l0" ]\n    foreach(entity player in GetPlayerArray())\n        NSCreatePollOnPlayer(player, "Vote who\'s the biggest dummy!", options, 30)\n  }\n')),(0,a.yg)("h3",{id:"getting-response"},"Getting Response"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Definition:")),(0,a.yg)("p",null,"Returns the index of the item from ",(0,a.yg)("inlineCode",{parentName:"p"},"options")," the player voted for. If\nthe player hadn\\'t voted yet it returns a -1."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Example:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'void function CheckResponseToDummyPoll(entity player)\n{\n    if(NSGetPlayerResponse(player) != -1)\n        print("Player has voted!")\n}\n')),(0,a.yg)("h2",{id:"large-message"},"Large Message"),(0,a.yg)("p",null,"Sends a large message to ",(0,a.yg)("inlineCode",{parentName:"p"},"player")," which will appear in the top right\ncorner."),(0,a.yg)("figure",{class:"screenshotalign-center"},(0,a.yg)("img",{src:"/_static/serversiderui/largemessage.gif",class:"screenshot",alt:"/_static/serversiderui/largemessage.gif"}),(0,a.yg)("figcaption",null,"Player POV")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Definition:")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Example:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'void function SendDummyLargeMessage(entity player)\n{\n    NSSendLargeMessageToPlayer(player,"I\'m not a dummy >:(", "You are", 10, "ui/fd_tutorial_tip.rpak")\n}\n')),(0,a.yg)("h2",{id:"info-message"},"Info Message"),(0,a.yg)("p",null,"Sends a smaller message to ",(0,a.yg)("inlineCode",{parentName:"p"},"player")," which will appear from the center\nright."),(0,a.yg)("figure",{class:"screenshotalign-center"},(0,a.yg)("img",{src:"/_static/serversiderui/info.gif",class:"screenshot",alt:"/_static/serversiderui/info.gif"}),(0,a.yg)("figcaption",null,"Player POV")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Definition:")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Example:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'void function SendDummyInfoMessage(entity player)\n{\n    NSSendInfoMessageToPlayer(player, "we were sent at the same time but I was sent sooner")\n}\n')),(0,a.yg)("h2",{id:"popup"},"PopUp"),(0,a.yg)("p",null,"Send a small popup to ",(0,a.yg)("inlineCode",{parentName:"p"},"player")," which will appear in the lower half of\ntheir screen under their cursor."),(0,a.yg)("figure",{class:"screenshotalign-center"},(0,a.yg)("img",{src:"/_static/serversiderui/popup.gif",class:"screenshot",alt:"/_static/serversiderui/popup.gif"}),(0,a.yg)("figcaption",null,"Player POV")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Definition:")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Example:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'void funcions SendDummyPopUp(entity player)\n{\n    NSSendPopUpMessageToPlayer(player, "very cool text I like")\n}\n')),(0,a.yg)("h2",{id:"announcement"},"Announcement"),(0,a.yg)("p",null,"Sends a large announcement to ",(0,a.yg)("inlineCode",{parentName:"p"},"player"),"."),(0,a.yg)("figure",{class:"screenshotalign-center"},(0,a.yg)("img",{src:"/_static/serversiderui/announcement.gif",class:"screenshot",alt:"/_static/serversiderui/announcement.gif"}),(0,a.yg)("figcaption",null,"Player POV")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Definition:")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Example:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'void function SendDummyAnnouncement(entity player)\n{\n    NSSendAnnouncementMessageToPlayer(player, "Very cool announcement", "Hi Karma", <1,1,0>, 1, ANNOUNCEMENT_STYLE_QUICK)\n}\n')),(0,a.yg)("h2",{id:"status"},"Status"),(0,a.yg)("p",null,"Status messages allow you to show live data to the player. Currently\nstatus messages are limited to 4 and there\\'s no way to know if the\nplayer can see your message."),(0,a.yg)("figure",{class:"screenshotalign-center"},(0,a.yg)("img",{src:"/_static/serversiderui/status.gif",class:"screenshot",alt:"/_static/serversiderui/status.gif"}),(0,a.yg)("figcaption",null,"Player POV")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Definitions:")),(0,a.yg)("p",null,"Creates a status message on ",(0,a.yg)("inlineCode",{parentName:"p"},"player"),". ",(0,a.yg)("inlineCode",{parentName:"p"},"id")," is used to identify and edit\nthe message, make sure your id is unique! To generate a unique id, use\nUniqueString()."),(0,a.yg)("p",null,"Allows for editing of the ",(0,a.yg)("inlineCode",{parentName:"p"},"title")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"description")," of a message which\nwas created using ",(0,a.yg)("inlineCode",{parentName:"p"},"id"),"."),(0,a.yg)("p",null,"Deletes the status message which was created with ",(0,a.yg)("inlineCode",{parentName:"p"},"id")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Examples:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'void function TestStatusMessage_Threaded(entity player)\n{\n    string id = UniqueString("votes#")\n    NSCreateStatusMessageOnPlayer(player, "have voted", "[0/12]", id)\n    wait 3\n    NSEditStatusMessageOnPlayer(player, "have voted", "[1/12]", id)\n    wait 10\n    NSDeleteStatusMessageOnPlayer(player, id)    \n}\n')))}u.isMDXComponent=!0}}]);