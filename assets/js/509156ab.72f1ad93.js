"use strict";(self.webpackChunkns_wiki=self.webpackChunkns_wiki||[]).push([[4686],{2676:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>a});var i=r(4848),s=r(8453);const t={},l="Integers",c={id:"squirrel/types/integers",title:"Integers",description:"Integers in Squirrel are 32 bit signed integers and can be any whole",source:"@site/docs/squirrel/types/integers.md",sourceDirName:"squirrel/types",slug:"/squirrel/types/integers",permalink:"/ns-wiki/docs/squirrel/types/integers",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/squirrel/types/integers.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Functionrefs",permalink:"/ns-wiki/docs/squirrel/types/functionrefs"},next:{title:"ornull",permalink:"/ns-wiki/docs/squirrel/types/ornull"}},d={},a=[{value:"Literals",id:"literals",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"integers",children:"Integers"})}),"\n",(0,i.jsx)(n.p,{children:"Integers in Squirrel are 32 bit signed integers and can be any whole\r\nnumber (in the 32 bit confines)."}),"\n",(0,i.jsxs)(n.p,{children:["An Integer is a primitive type with a default value of ",(0,i.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The type keyword for Integers is ",(0,i.jsx)(n.code,{children:"int"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"literals",children:"Literals"}),"\n",(0,i.jsx)(n.p,{children:"Integers can be represented with multiple different literals."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Decimal"}),"\n",(0,i.jsx)(n.p,{children:"Regular decimal letters will always be an integer decimal literal.\r\n.. code-block:"}),"\n",(0,i.jsx)(n.p,{children:"int n = 123"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Hexadecimal"}),"\n",(0,i.jsxs)(n.p,{children:["If any number is prefixed with ",(0,i.jsx)(n.code,{children:"0x"}),", it is a hexadecimal literal."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"int n = 0x0012 // 18\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Octal"}),"\n",(0,i.jsxs)(n.p,{children:["Numbers starting with a ",(0,i.jsx)(n.code,{children:"0"})," are octal literals."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"int n = 075 // 61\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Chars"}),"\n",(0,i.jsx)(n.p,{children:"A single letter or escaped sequence are character literals. Their\r\nvalue is the ASCII value of the letter."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"int a = 'a' // 97\r\nint newline = '\\n' // 10\n"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>c});var i=r(6540);const s={},t=i.createContext(s);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);